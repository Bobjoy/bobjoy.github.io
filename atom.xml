<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IT飞鱼</title>
  <subtitle>天高任鸟飞，海阔凭鱼跃</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bobjoy.github.io/"/>
  <updated>2017-12-28T04:36:47.904Z</updated>
  <id>http://bobjoy.github.io/</id>
  
  <author>
    <name>鲍方亮</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaWeb文件下载知识整理</title>
    <link href="http://bobjoy.github.io/2017/12/28/JavaWeb%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/"/>
    <id>http://bobjoy.github.io/2017/12/28/JavaWeb文件下载知识整理/</id>
    <published>2017-12-28T03:49:16.000Z</published>
    <updated>2017-12-28T04:36:47.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="中文文件名乱码"><a href="#中文文件名乱码" class="headerlink" title="中文文件名乱码"></a>中文文件名乱码</h2><p>JAVA文件下载时乱码有两种情况：</p>
<ol>
<li>下载时中文文件名乱码</li>
</ol>
<p>解决方法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">String userAgent = request.getHeader(<span class="string">"User-Agent"</span>);</div><div class="line">String fileName = <span class="string">"中文文件名称"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 针对IE或者以IE为内核的浏览器：</span></div><div class="line"><span class="keyword">if</span> (userAgent.contains(<span class="string">"MSIE"</span>) || userAgent.contains(<span class="string">"Trident"</span>)) &#123;</div><div class="line">	fileName = java.net.URLEncoder.encode(fileName, <span class="string">"UTF-8"</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="comment">// 非IE浏览器的处理：</span></div><div class="line">	fileName = <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO-8859-1"</span>);</div><div class="line">&#125;</div><div class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, String.format(<span class="string">"attachment; filename=\"%s\""</span>, fileName + <span class="string">".xls"</span>));</div><div class="line">response.setContentType(<span class="string">"application/vnd.ms-excel;charset=utf-8"</span>);</div><div class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</div></pre></td></tr></table></figure>
<ol>
<li>下载时因为路径中包含中文文件名乱码，提示找不到文件</li>
</ol>
<p>解决方法：修改Tomcat配置文件 <code>${CATLINA_HOME}/conf/server.xml</code> ，如下内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> </span></div><div class="line">           <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></div><div class="line">           <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></div><div class="line">           <span class="attr">redirectPort</span>=<span class="string">"8443"</span></div><div class="line">           <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span> /&gt;</div></pre></td></tr></table></figure>
<h2 id="Content-Disposition的作用以及attachment、inline的区别"><a href="#Content-Disposition的作用以及attachment、inline的区别" class="headerlink" title="Content-Disposition的作用以及attachment、inline的区别"></a>Content-Disposition的作用以及attachment、inline的区别</h2><ul>
<li><p><code>Content-Disposition</code> 是 MIME 协议的扩展，MIME 协议指示 MIME 用户代理如何显示附加的文件。当浏览器接收到头时，它会激活文件下载对话框，它的文件名框自动填充了头中指定的文件名。</p>
</li>
<li><p>服务端向客户端游览器发送文件时，如果是浏览器支持的文件类型，一般会默认使用浏览器打开，比如txt、jpg等，会直接在浏览器中显示，如果需要提示用户保存，就要利用 <code>Content-Disposition</code> 进行一下处理，关键在于一定要加上 <code>attachment</code> ：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=FileName.txt&quot;);</div></pre></td></tr></table></figure>
<p>  备注：这样浏览器会提示保存还是打开，即使选择打开，也会使用相关联的程序比如记事本打开，而不是IE直接打开了。</p>
<ul>
<li><p>Java Web中下载文件时,我们一般设置 <code>Content-Disposition</code> 告诉浏览器下载文件的名称,是否在浏览器中内嵌显示.</p>
</li>
<li><p><code>Content-Disposition: inline;filename=foobar.pdf</code> 表示浏览器内嵌显示一个文件，<code>Content-Type</code> 值为 <code>application/octet-stream</code> 除外</p>
</li>
<li><p><code>Content-Disposition: attachment;filename=foobar.pdf</code> 表示会下载文件,如火狐浏览器中</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;中文文件名乱码&quot;&gt;&lt;a href=&quot;#中文文件名乱码&quot; class=&quot;headerlink&quot; title=&quot;中文文件名乱码&quot;&gt;&lt;/a&gt;中文文件名乱码&lt;/h2&gt;&lt;p&gt;JAVA文件下载时乱码有两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载时中文文件名乱码&lt;/li&gt;
&lt;/o
    
    </summary>
    
      <category term="编程开发" scheme="http://bobjoy.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java" scheme="http://bobjoy.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Windows命令集合</title>
    <link href="http://bobjoy.github.io/2017/12/27/Windows%E5%91%BD%E4%BB%A4%E9%9B%86%E5%90%88/"/>
    <id>http://bobjoy.github.io/2017/12/27/Windows命令集合/</id>
    <published>2017-12-27T07:41:21.000Z</published>
    <updated>2017-12-27T07:43:20.137Z</updated>
    
    <content type="html"><![CDATA[<p>ipconfig———查看本机IP信息 （Linux系统下是ifonfig）</p>
<p>ping———检查网络是否连通</p>
<p>tracert———查询从本机到该IP地址所在的电脑要经过的路由器及其IP地址</p>
<p>winver———检查Windows版本</p>
<p>wmimgmt.msc—-打开windows管理体系结构(WMI)</p>
<p>wupdmgr——–windows更新程序</p>
<p>wscript——–windows脚本宿主设置</p>
<p>write———-写字板</p>
<p>winmsd———系统信息</p>
<p>dxdiag———检查DirectX信息</p>
<p>drwtsn32—— 系统医生</p>
<p>devmgmt.msc— 设备管理器</p>
<p>dfrg.msc——-磁盘碎片整理程序</p>
<p>diskmgmt.msc—磁盘管理实用程序</p>
<p>dcomcnfg——-打开系统组件服务</p>
<p>ddeshare——-打开DDE共享设置</p>
<p>dvdplay——–DVD播放器</p>
<p>tsshutdn——-60秒倒计时关机命令</p>
<p>taskmgr——–任务管理器</p>
<p>regedit.exe—-注册表</p>
<p>rsop.msc——-组策略结果集</p>
<p>regedt32——-注册表编辑器</p>
<p>rononce -p —-15秒关机</p>
<p>osk————打开屏幕键盘</p>
<p>odbcad32——-ODBC数据源管理器</p>
<p>oobe/msoobe /a—-检查XP是否激活</p>
<p>lusrmgr.msc—-本机用户和组</p>
<p>logoff———注销命令</p>
<p>iexpress——-木马捆绑工具，系统自带</p>
<p>Nslookup——-IP地址侦测器</p>
<p>fsmgmt.msc—–共享文件夹管理器</p>
<p>utilman——–辅助工具管理器</p>
<p>gpedit.msc—–组策略</p>
<p>services、msc—本地服务设置</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ipconfig———查看本机IP信息 （Linux系统下是ifonfig）&lt;/p&gt;
&lt;p&gt;ping———检查网络是否连通&lt;/p&gt;
&lt;p&gt;tracert———查询从本机到该IP地址所在的电脑要经过的路由器及其IP地址&lt;/p&gt;
&lt;p&gt;winver———检查Windows版本&lt;
    
    </summary>
    
      <category term="Windows" scheme="http://bobjoy.github.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="http://bobjoy.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>好用的网盘搜索引擎搜藏</title>
    <link href="http://bobjoy.github.io/2017/12/15/%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%90%9C%E8%97%8F/"/>
    <id>http://bobjoy.github.io/2017/12/15/好用的网盘搜索引擎搜藏/</id>
    <published>2017-12-15T01:15:22.000Z</published>
    <updated>2017-12-27T07:35:00.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网盘搜索引擎"><a href="#网盘搜索引擎" class="headerlink" title="网盘搜索引擎"></a>网盘搜索引擎</h2><ul>
<li>电驴 <a href="http://www.verycd.com" target="_blank" rel="external">http://www.verycd.com</a></li>
</ul>
<ul>
<li>城通网盘 <a href="https://www.ctfile.com" target="_blank" rel="external">https://www.ctfile.com</a></li>
</ul>
<ul>
<li>盘多多 <a href="http://www.panduoduo.net" target="_blank" rel="external">http://www.panduoduo.net</a></li>
</ul>
<ul>
<li>西林街 <a href="http://www.xilinjie.com" target="_blank" rel="external">http://www.xilinjie.com</a></li>
</ul>
<ul>
<li>胖次网盘搜索引擎 <a href="http://www.panc.cc" target="_blank" rel="external">http://www.panc.cc</a></li>
</ul>
<ul>
<li>呆木瓜 <a href="http://md5.daimugua.com" target="_blank" rel="external">http://md5.daimugua.com</a> (关停)</li>
</ul>
<ul>
<li>盘搜 <a href="http://www.pansou.com" target="_blank" rel="external">http://www.pansou.com</a></li>
</ul>
<ul>
<li>网盘搜 <a href="http://www.wangpansou.cn" target="_blank" rel="external">http://www.wangpansou.cn</a></li>
</ul>
<ul>
<li>盘易搜 <a href="http://panyisou.com" target="_blank" rel="external">http://panyisou.com</a> (不可用)</li>
</ul>
<ul>
<li>网盘搜啦 <a href="http://www.bdsola.com" target="_blank" rel="external">http://www.bdsola.com</a></li>
</ul>
<ul>
<li>盘盘搜 <a href="http://www.panpanso.com" target="_blank" rel="external">http://www.panpanso.com</a></li>
</ul>
<ul>
<li>特百度 <a href="http://www.tebaidu.com" target="_blank" rel="external">http://www.tebaidu.com</a></li>
</ul>
<ul>
<li>搜百度盘 <a href="http://www.sobaidupan.com" target="_blank" rel="external">http://www.sobaidupan.com</a></li>
</ul>
<ul>
<li>我的盘 <a href="http://www.wodepan.com" target="_blank" rel="external">http://www.wodepan.com</a></li>
</ul>
<ul>
<li>网盘007 <a href="http://wangpan007.com" target="_blank" rel="external">http://wangpan007.com</a></li>
</ul>
<ul>
<li>天天搜 <a href="http://www.daysou.com" target="_blank" rel="external">http://www.daysou.com</a></li>
</ul>
<ul>
<li>网盘屋 <a href="http://www.wangpanwu.com" target="_blank" rel="external">http://www.wangpanwu.com</a></li>
</ul>
<ul>
<li>百度网盘之家 <a href="http://wowenda.com" target="_blank" rel="external">http://wowenda.com</a></li>
</ul>
<ul>
<li>盘优搜 <a href="http://www.panuso.com" target="_blank" rel="external">http://www.panuso.com</a></li>
</ul>
<ul>
<li>百度云搜 <a href="http://www.baiduyunso.com" target="_blank" rel="external">http://www.baiduyunso.com</a></li>
</ul>
<ul>
<li>去转盘网 <a href="http://www.quzhuanpan.com" target="_blank" rel="external">http://www.quzhuanpan.com</a></li>
</ul>
<h2 id="实用网站"><a href="#实用网站" class="headerlink" title="实用网站"></a>实用网站</h2><ul>
<li>PDF导航 <a href="https://pdfcandy.com/tw" target="_blank" rel="external">https://pdfcandy.com/tw</a></li>
</ul>
<p>一个十分全面的PDF导航网站，各种对PDF的编辑和转化，相信完全满足你对PDF的需求；真的十分强大的网站</p>
<ul>
<li>V视频助手 <a href="http://v.ranks.xin" target="_blank" rel="external">http://v.ranks.xin</a></li>
</ul>
<p>支持下载腾讯视频、秒拍视频、微博视频、今日头条、阳光宽频网、快手、微信、百度视频、梨视频、西瓜视频等；用了就知道好用，十分方便你对各种视频的下载</p>
<ul>
<li>会员影视中心 <a href="http://97ym.cn/vip" target="_blank" rel="external">http://97ym.cn/vip</a></li>
</ul>
<p>一个视频解析网站，相信你应该知道怎么使用，十分实用，有需求的可以自己去尝试</p>
<ul>
<li>在线录屏、视频下载 <a href="https://www.videograbber.net/zh" target="_blank" rel="external">https://www.videograbber.net/zh</a></li>
</ul>
<p>在线下载优酷、爱奇艺、哔哩哔哩等主流视频网站的视频。并且支持在线录屏和在线音视频格式转换，十分良心</p>
<ul>
<li>迅捷PDF在线编辑器 <a href="http://app.xunjiepdf.com" target="_blank" rel="external">http://app.xunjiepdf.com</a></li>
</ul>
<p>PDF文件需要编辑或者转换不用花时间去找一些软件或者花钱去进行转换，这个网站可以轻松帮你解决！</p>
<h2 id="电影资源网站"><a href="#电影资源网站" class="headerlink" title="电影资源网站"></a>电影资源网站</h2><ul>
<li><p>电影街 <a href="http://t.cn/Rcs5iFq" target="_blank" rel="external">http://t.cn/Rcs5iFq</a></p>
</li>
<li><p>深影论坛 <a href="http://t.cn/RA2E8Ta" target="_blank" rel="external">http://t.cn/RA2E8Ta</a></p>
</li>
<li><p>BT之家 <a href="http://t.cn/RSmcbGy" target="_blank" rel="external">http://t.cn/RSmcbGy</a></p>
</li>
<li><p>电影港 <a href="http://t.cn/RAkhAeF" target="_blank" rel="external">http://t.cn/RAkhAeF</a></p>
</li>
<li><p>小浣熊 <a href="http://t.cn/RLF7zy5" target="_blank" rel="external">http://t.cn/RLF7zy5</a></p>
</li>
<li><p>QVOCD <a href="http://t.cn/zOueO0J" target="_blank" rel="external">http://t.cn/zOueO0J</a></p>
</li>
<li><p>嘎嘎影视 <a href="http://t.cn/RvfQBPZ" target="_blank" rel="external">http://t.cn/RvfQBPZ</a></p>
</li>
<li><p>BT家 <a href="http://t.cn/RSPW1hq" target="_blank" rel="external">http://t.cn/RSPW1hq</a></p>
</li>
<li><p>无极论坛 <a href="http://t.cn/RUV9YeG" target="_blank" rel="external">http://t.cn/RUV9YeG</a></p>
</li>
<li><p>蚂蚁高清<a href="http://t.cn/RSmcbGA" target="_blank" rel="external">http://t.cn/RSmcbGA</a></p>
</li>
<li><p>ed2000 <a href="http://t.cn/hiVAw" target="_blank" rel="external">http://t.cn/hiVAw</a></p>
</li>
<li><p>ed2kfile <a href="http://t.cn/zRT4D78" target="_blank" rel="external">http://t.cn/zRT4D78</a></p>
</li>
<li><p>8688 <a href="http://t.cn/RSmcbGJ" target="_blank" rel="external">http://t.cn/RSmcbGJ</a></p>
</li>
<li><p>A站 <a href="http://t.cn/hiIr5" target="_blank" rel="external">http://t.cn/hiIr5</a></p>
</li>
<li><p>B站 <a href="http://t.cn/hbJPuO" target="_blank" rel="external">http://t.cn/hbJPuO</a></p>
</li>
<li><p>小调网 <a href="http://www.xiaopian.com/" target="_blank" rel="external">http://www.xiaopian.com/</a></p>
</li>
<li><p>全集网 <a href="http://www.quanji.la/" target="_blank" rel="external">http://www.quanji.la/</a></p>
</li>
<li><p>电影港 <a href="http://www.dygang.com/" target="_blank" rel="external">http://www.dygang.com/</a></p>
</li>
<li><p>泡饭影视 <a href="http://www.chapaofan.com/" target="_blank" rel="external">http://www.chapaofan.com/</a></p>
</li>
<li><p>电影天堂2018 <a href="http://www.dy2018.com/" target="_blank" rel="external">http://www.dy2018.com/</a></p>
</li>
<li><p>LOL电影天堂 <a href="http://www.loldytt.com/" target="_blank" rel="external">http://www.loldytt.com/</a></p>
</li>
<li><p>龙部落 <a href="http://www.lbldy.com/" target="_blank" rel="external">http://www.lbldy.com/</a></p>
</li>
<li><p>飘花电影网 <a href="http://www.piaohua.com/" target="_blank" rel="external">http://www.piaohua.com/</a></p>
</li>
<li><p>6V电影 <a href="http://www.6vhao.net/" target="_blank" rel="external">http://www.6vhao.net/</a></p>
</li>
<li><p>电影家园 <a href="http://www.dy1234.net/" target="_blank" rel="external">http://www.dy1234.net/</a></p>
</li>
<li><p>天天电影 <a href="http://www.tiantiandy.com/" target="_blank" rel="external">http://www.tiantiandy.com/</a></p>
</li>
<li><p>电影天堂 <a href="http://www.dygod.net/" target="_blank" rel="external">http://www.dygod.net/</a></p>
</li>
<li><p>破晓电影 <a href="http://www.poxiao.com/" target="_blank" rel="external">http://www.poxiao.com/</a></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网盘搜索引擎&quot;&gt;&lt;a href=&quot;#网盘搜索引擎&quot; class=&quot;headerlink&quot; title=&quot;网盘搜索引擎&quot;&gt;&lt;/a&gt;网盘搜索引擎&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;电驴 &lt;a href=&quot;http://www.verycd.com&quot; target=&quot;_blan
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mybatis单个参数的if判断（针对异常：There is no getter for property..）</title>
    <link href="http://bobjoy.github.io/2017/11/23/Mybatis%E5%8D%95%E4%B8%AA%E5%8F%82%E6%95%B0%E7%9A%84if%E5%88%A4%E6%96%AD%EF%BC%88%E9%92%88%E5%AF%B9%E5%BC%82%E5%B8%B8%EF%BC%9AThere-is-no-getter-for-property-%EF%BC%89/"/>
    <id>http://bobjoy.github.io/2017/11/23/Mybatis单个参数的if判断（针对异常：There-is-no-getter-for-property-）/</id>
    <published>2017-11-23T02:12:42.000Z</published>
    <updated>2017-12-20T09:26:53.705Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis在进行参数判断的时候，可以直接使用传入entity实体属性名或者map的键名，如下：</p>
<ol>
<li><p>常规代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.demo.entity.Test"</span>&gt;</span></div><div class="line">  UPDATE t_test</div><div class="line">  <span class="tag">&lt;<span class="name">set</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"field1 != null"</span>&gt;</span></div><div class="line">      field1 = #&#123;field1,jdbcType=VARCHAR&#125;,</div><div class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"field2 != null"</span>&gt;</span></div><div class="line">      field2 = #&#123;field2,jdbcType=INTEGER&#125;,</div><div class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">set</span>&gt;</span></div><div class="line">  WHERE id = #&#123;id,jdbcType=INTEGER&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>但是单个参数和多参数的判断有个不同点，当我们的入参为entity实体，或者map的时候，使用 <code>if</code> 参数判断没任何问题。</p>
</li>
<li><p>但是当我们的入参为 <code>java.lang.Integer</code> 或者 <code>java.lang.String</code> 的时候，这时候就需要注意一些事情了，代码如下：</p>
</li>
</ul>
</li>
<li><p>错误代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"select"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></div><div class="line">  SELECT field FROM t_test WHERE</div><div class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null"</span>&gt;</span></div><div class="line">    AND id = #&#123;id&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>上述代码存在一些问题，首先入参是 <code>java.lang.Integer</code>，而不是map或者实体的入参方式，对于这类单个入参然后用 <code>if</code> 判断的，MyBatis有自己的内置对象</p>
</li>
<li><p>如果你在 <code>if</code> 判断里面写的是你的入参的对象名，那就报异常：<code>Internal error : nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named &#39;langId&#39; in &#39;class java.lang.Integer&#39;</code></p>
</li>
</ul>
</li>
<li><p>正确代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"select"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></div><div class="line">  SELECT field FROM t_test WHERE</div><div class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"_parameter != null"</span>&gt;</span></div><div class="line">    AND id = #&#123;id,jdbcType=INTEGER&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>这里MyBatis有内置对象 <code>_parameter</code>，对于单个参数的传入和判断，必须用 <code>_parameter</code> 来处理，而不是传入对象名 <code>id</code></p>
</li>
<li><p>在使用传入参数时，需要加上参数对于数据库类型</p>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>参考：<a href="https://www.2cto.com/database/201505/401604.html" target="_blank" rel="external">https://www.2cto.com/database/201505/401604.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MyBatis在进行参数判断的时候，可以直接使用传入entity实体属性名或者map的键名，如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;常规代码&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSH公钥中保存多个git账号</title>
    <link href="http://bobjoy.github.io/2017/08/15/SSH%E5%85%AC%E9%92%A5%E4%B8%AD%E4%BF%9D%E5%AD%98%E5%A4%9A%E4%B8%AAgit%E8%B4%A6%E5%8F%B7/"/>
    <id>http://bobjoy.github.io/2017/08/15/SSH公钥中保存多个git账号/</id>
    <published>2017-08-15T09:29:27.000Z</published>
    <updated>2017-12-20T09:26:53.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>之前生成了GitHub的ssh公钥，可以免登陆提交代码，后来在oschina上也需要生成ssh公钥，发现GitHub的公钥就无法使用了，需要重新生成，但是又会将oschina的公钥覆盖掉。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol>
<li><p>创建不同的ssh公钥，修改默认文件路径</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">➜  ~ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/Users/xxx/.ssh/id_rsa): /Users/xxx/.ssh/id_rsa_oschina</div><div class="line">Enter passphrase (empty for no passphrase):</div><div class="line">Enter same passphrase again:</div><div class="line">Your identification has been saved in /Users/xxx/.ssh/id_rsa_oschina.</div><div class="line">Your public key has been saved in /Users/xxx/.ssh/id_rsa_oschina.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:xVDjp+8X5x6YWx9gaxSpXo3Oj+ra0usZ9IwPtzYv8mk your_email@youremail.com</div><div class="line">The key&apos;s randomart image is:</div><div class="line">\+---[RSA 2048]----+</div><div class="line">|        ..o      |</div><div class="line">|         + . .   |</div><div class="line">|          + +    |</div><div class="line">|         . * .   |</div><div class="line">|        S = =    |</div><div class="line">|       . X =.=.  |</div><div class="line">|       .+ X X+o  |</div><div class="line">|      ..o*EX .oo |</div><div class="line">|      .=XXX++oo  |</div><div class="line">\+----[SHA256]-----+</div></pre></td></tr></table></figure>
</li>
<li><p>添加生成的公钥</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-add ~/.ssh/id_rsa_oschina</div></pre></td></tr></table></figure>
<p> 添加之前可以删除缓存的公钥</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-add -D</div></pre></td></tr></table></figure>
<p> 添加之后查看添加的公钥</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-add -l</div></pre></td></tr></table></figure>
</li>
<li><p>将对应的ssh公钥添加到git账号上去</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">➜  cat ~/.ssh/id_rsa_oschina | pbcopy</div></pre></td></tr></table></figure>
</li>
<li><p>验证</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">➜  .ssh ssh -T git@git.oschina.net</div><div class="line">Welcome to Git@OSC, xxx!</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://gist.github.com/Bobjoy/57d520585565e8afdc61495f7e71c3e6" target="_blank" rel="external">https://gist.github.com/Bobjoy/57d520585565e8afdc61495f7e71c3e6</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;之前生成了GitHub的ssh公钥，可以免登陆提交代码，后来在oschina上也需要生成ssh公钥，发现GitHub的公钥就
    
    </summary>
    
      <category term="编程开发" scheme="http://bobjoy.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Git" scheme="http://bobjoy.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>记一次Spring注入Bean异常</title>
    <link href="http://bobjoy.github.io/2017/08/03/%E8%AE%B0%E4%B8%80%E6%AC%A1Spring%E6%B3%A8%E5%85%A5Bean%E5%BC%82%E5%B8%B8/"/>
    <id>http://bobjoy.github.io/2017/08/03/记一次Spring注入Bean异常/</id>
    <published>2017-08-03T04:36:38.000Z</published>
    <updated>2017-12-20T09:26:53.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"> org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">'userLastOnlineController'</span>: Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire method: <span class="keyword">public</span> <span class="keyword">void</span> com.bfl.sa.common.web.controller.BaseCRUDController.setBaseService(com.bfl.sa.common.service.BaseService); nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.bfl.sa.common.service.BaseService] found <span class="keyword">for</span> dependency: expected at least <span class="number">1</span> bean which qualifies as autowire candidate <span class="keyword">for</span> <span class="keyword">this</span> dependency. Dependency annotations: &#123;&#125;</div><div class="line">	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:<span class="number">334</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1214</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">543</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:<span class="number">482</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory$<span class="number">1</span>.getObject(AbstractBeanFactory.java:<span class="number">306</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:<span class="number">230</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">302</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">197</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:<span class="number">772</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:<span class="number">839</span>) ~[spring-context-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:<span class="number">538</span>) ~[spring-context-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:<span class="number">667</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:<span class="number">633</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:<span class="number">681</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:<span class="number">552</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:<span class="number">493</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:<span class="number">136</span>) ~[spring-webmvc-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at javax.servlet.GenericServlet.init(GenericServlet.java:<span class="number">158</span>) ~[servlet-api.jar:<span class="number">3.1</span>.FR]</div><div class="line">	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:<span class="number">1227</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:<span class="number">1140</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:<span class="number">1027</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:<span class="number">5038</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:<span class="number">5348</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:<span class="number">145</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:<span class="number">725</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:<span class="number">701</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:<span class="number">717</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:<span class="number">1696</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:<span class="number">498</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:<span class="number">300</span>) ~[tomcat-coyote.jar:<span class="number">8.0</span>.37]</div><div class="line">	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:<span class="number">819</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:<span class="number">801</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:<span class="number">484</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:<span class="number">433</span>) ~[catalina.jar:<span class="number">8.0</span>.37]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:<span class="number">498</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:<span class="number">300</span>) ~[tomcat-coyote.jar:<span class="number">8.0</span>.37]</div><div class="line">	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:<span class="number">819</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:<span class="number">801</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:<span class="number">1468</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.access$<span class="number">300</span>(RMIConnectionImpl.java:<span class="number">76</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:<span class="number">1309</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:<span class="number">1401</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:<span class="number">829</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:<span class="number">498</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:<span class="number">324</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.Transport$<span class="number">1</span>.run(Transport.java:<span class="number">200</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.Transport$<span class="number">1</span>.run(Transport.java:<span class="number">197</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.security.AccessController.doPrivileged(Native Method) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.Transport.serviceCall(Transport.java:<span class="number">196</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:<span class="number">568</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:<span class="number">826</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$<span class="number">0</span>(TCPTransport.java:<span class="number">683</span>) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.security.AccessController.doPrivileged(Native Method) ~[?:<span class="number">1.8</span>.0_101]</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:<span class="number">682</span>) [?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:<span class="number">1142</span>) [?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:<span class="number">617</span>) [?:<span class="number">1.8</span>.0_101]</div><div class="line">	at java.lang.Thread.run(Thread.java:<span class="number">745</span>) [?:<span class="number">1.8</span>.0_101]</div><div class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire method: <span class="keyword">public</span> <span class="keyword">void</span> com.bfl.sa.common.web.controller.BaseCRUDController.setBaseService(com.bfl.sa.common.service.BaseService); nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.bfl.sa.common.service.BaseService] found <span class="keyword">for</span> dependency: expected at least <span class="number">1</span> bean which qualifies as autowire candidate <span class="keyword">for</span> <span class="keyword">this</span> dependency. Dependency annotations: &#123;&#125;</div><div class="line">	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:<span class="number">661</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:<span class="number">88</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:<span class="number">331</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	... <span class="number">65</span> more</div><div class="line">Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.bfl.sa.common.service.BaseService] found <span class="keyword">for</span> dependency: expected at least <span class="number">1</span> bean which qualifies as autowire candidate <span class="keyword">for</span> <span class="keyword">this</span> dependency. Dependency annotations: &#123;&#125;</div><div class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:<span class="number">1373</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:<span class="number">1119</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:<span class="number">1014</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:<span class="number">618</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:<span class="number">88</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:<span class="number">331</span>) ~[spring-beans-<span class="number">4.2</span>.5.RELEASE.jar:<span class="number">4.2</span>.5.RELEASE]</div><div class="line">	... <span class="number">65</span> more</div></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul>
<li><code>BaseCRUDController</code> 类主要代码如下：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 基础CRUD 控制器</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseCRUDController</span>&lt;<span class="title">E</span> <span class="keyword">extends</span> <span class="title">BaseEntity</span>, <span class="title">ID</span> <span class="keyword">extends</span> <span class="title">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title">BaseController</span>&lt;<span class="title">E</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> BaseService&lt;E, ID&gt; baseService;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBaseService</span><span class="params">(BaseService&lt;E, ID&gt; baseService)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.baseService = baseService;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">	<span class="comment">// 以下忽略一些代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>在 <code>BaseCRUDController.setBaseService(BaseService&lt;E, ID&gt; baseService)</code> 方法处断点调试</li>
</ul>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170803/spring_debug1.png" alt=""></p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170803/spring_debug2.png" alt=""></p>
<ul>
<li>断点调试发现在实例化 <code>PermissionController</code> 和 <code>UserController</code> 时，对应的 <code>Service</code> 都是可以正常注入的，但是当实例化 <code>UserLastOnlineController</code> 时，就出现了以上描述的异常。</li>
</ul>
<p>Controller</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/admin/sys/permission/permission"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionController</span> <span class="keyword">extends</span> <span class="title">BaseCRUDController</span>&lt;<span class="title">Permission</span>, <span class="title">Long</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span>(<span class="string">"adminUserController"</span>)</div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/admin/sys/user"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">BaseCRUDController</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/admin/sys/user/lastOnline"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserLastOnlineController</span> <span class="keyword">extends</span> <span class="title">BaseCRUDController</span>&lt;<span class="title">UserLastOnline</span>, <span class="title">Long</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Service</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">Permission</span>, <span class="title">Long</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserLastOnlineService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">UserLastOnline</span>, <span class="title">String</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>仔细比对 <code>Controller</code> 和 <code>Service</code> ，发现都只是简单的继承基础类，不过仔细观察，发现 <code>UserLastOnlineController</code> 和 <code>UserLastOnlineService</code> 中基类泛型中主键类型不同，然后将 <code>UserLastOnlineService</code> 中的主键类型修改为 <code>Long</code> 后，再调试就OK了</li>
</ul>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170803/spring_debug3.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL使用问题记录(持续更新)</title>
    <link href="http://bobjoy.github.io/2017/07/28/MySQL%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://bobjoy.github.io/2017/07/28/MySQL使用问题记录-持续更新/</id>
    <published>2017-07-28T08:01:09.000Z</published>
    <updated>2017-12-29T10:02:48.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL语句中delete语句中别名引发的问题"><a href="#SQL语句中delete语句中别名引发的问题" class="headerlink" title="SQL语句中delete语句中别名引发的问题"></a>SQL语句中delete语句中别名引发的问题</h2><ol>
<li><p>SQL语句</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> sys_auth t <span class="keyword">WHERE</span> t.id=<span class="number">1</span></div></pre></td></tr></table></figure>
</li>
<li><p>错误提示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[42000][1064] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;t where t.id=111&apos; at line 1</div></pre></td></tr></table></figure>
</li>
<li><p>解决方法</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> sys_auth <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span></div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span> t <span class="keyword">FROM</span> sys_auth t <span class="keyword">WHERE</span> t.id=<span class="number">1</span></div></pre></td></tr></table></figure>
</li>
<li><p>问题原因</p>
<p>别名使用姿势不对</p>
<blockquote>
<p><a href="https://dev.mysql.com/doc/refman/5.6/en/delete.html" target="_blank" rel="external">MySQL5.6参考手册</a></p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170728/mysql_delete_alias.png" alt=""></p>
</blockquote>
</li>
</ol>
<h2 id="Sonar报错问题处理"><a href="#Sonar报错问题处理" class="headerlink" title="Sonar报错问题处理"></a>Sonar报错问题处理</h2><ul>
<li><p>错误描述</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ERROR: Error during SonarQube Scanner execution</div><div class="line"></div><div class="line">ERROR: Failed to upload report - 500: An error has occurred. Please contact your administrator</div></pre></td></tr></table></figure>
</li>
<li><p>问题原因：mysql参数设置问题</p>
<ul>
<li><p>检查mysql参数：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">mysql&gt;</span> SHOW VARIABLES LIKE 'max_allowed_packet';</div></pre></td></tr></table></figure>
</li>
<li><p>修改/etc/my.cnf文件：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">max_allowed_packet</span> = <span class="number">50</span>M</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="无法删除数据库-ERROR-1010-HY000"><a href="#无法删除数据库-ERROR-1010-HY000" class="headerlink" title="无法删除数据库 ERROR 1010 (HY000)"></a>无法删除数据库 ERROR 1010 (HY000)</h2><p>在做数据库删除时出现这种提示，其原因是在database下面含有自己放进去的文件，譬如<em>.txt文件或</em>.sql文件等，只要进去把这个文件删了在执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drop database database_name;</div></pre></td></tr></table></figure>
<h2 id="MySQL-命令行创建数据库"><a href="#MySQL-命令行创建数据库" class="headerlink" title="MySQL 命令行创建数据库"></a>MySQL 命令行创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> dbname <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'dbuser'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'dbpwd'</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> dbname.* <span class="keyword">TO</span> <span class="string">'dbuser'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'dbpwd'</span>;</div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">ON</span> dbname.* <span class="keyword">TO</span> <span class="string">'dbuser'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'dbpwd'</span>;</div><div class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SQL语句中delete语句中别名引发的问题&quot;&gt;&lt;a href=&quot;#SQL语句中delete语句中别名引发的问题&quot; class=&quot;headerlink&quot; title=&quot;SQL语句中delete语句中别名引发的问题&quot;&gt;&lt;/a&gt;SQL语句中delete语句中别名引发的
    
    </summary>
    
      <category term="MySQl" scheme="http://bobjoy.github.io/categories/MySQl/"/>
    
    
      <category term="MySQl" scheme="http://bobjoy.github.io/tags/MySQl/"/>
    
  </entry>
  
  <entry>
    <title>Java读取INI文件时返回空</title>
    <link href="http://bobjoy.github.io/2017/07/26/Java%E8%AF%BB%E5%8F%96INI%E6%96%87%E4%BB%B6%E6%97%B6%E8%BF%94%E5%9B%9E%E7%A9%BA/"/>
    <id>http://bobjoy.github.io/2017/07/26/Java读取INI文件时返回空/</id>
    <published>2017-07-26T07:48:51.000Z</published>
    <updated>2017-12-20T09:26:53.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Java 读取 INI配置 文件时，返回内容为空，也没有报错，配置内容如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[base_auth]</div><div class="line">/static/**  = anon</div><div class="line">/u/**       = anon</div><div class="line">/open/**    = anon</div><div class="line">/user/**    = kickout,simple,login</div></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>去除配置文件中每一行 ‘=’ 号两边的空格</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;Java 读取 INI配置 文件时，返回内容为空，也没有报错，配置内容如下&lt;/p&gt;
&lt;figure class=&quot;highl
    
    </summary>
    
      <category term="Java" scheme="http://bobjoy.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bobjoy.github.io/tags/Java/"/>
    
      <category term="INI" scheme="http://bobjoy.github.io/tags/INI/"/>
    
  </entry>
  
  <entry>
    <title>GIT使用问题记录(持续更新)</title>
    <link href="http://bobjoy.github.io/2017/07/23/GIT%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://bobjoy.github.io/2017/07/23/GIT使用问题记录-持续更新/</id>
    <published>2017-07-23T10:48:06.000Z</published>
    <updated>2017-12-20T09:26:53.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git-submodule-add-“a-git-directory-is-found-locally”-issue"><a href="#Git-submodule-add-“a-git-directory-is-found-locally”-issue" class="headerlink" title="Git submodule add: “a git directory is found locally” issue"></a>Git submodule add: “a git directory is found locally” issue</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git submodule add https://github.com/iissnan/hexo-theme-next.git themes/next --branch master</div><div class="line">A git directory for 'themes/next' is found locally with remote(s):</div><div class="line">  origin        https://github.com/XXX/hexo-theme-next.git</div><div class="line">If you want to reuse this local git directory instead of cloning again from</div><div class="line">  https://github.com/iissnan/hexo-theme-next.git</div><div class="line">use the '--force' option. If the local git directory is not the correct repo</div><div class="line">or you are unsure what this means choose another name with the '--name' option.</div></pre></td></tr></table></figure>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li><p><code>git rm –-cached themes/next</code></p>
</li>
<li><p>删除 <code>.gitmodules</code> 文件中如下内容:</p>
</li>
</ol>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">[submodule</span> <span class="string">"themes/next"</span><span class="string">]</span></div><div class="line">	<span class="string">path</span> <span class="string">=</span> <span class="string">themes/next</span></div><div class="line">	<span class="string">url</span> <span class="string">=</span> <span class="attr">https://github.com/XXX/hexo-theme-next.git</span></div></pre></td></tr></table></figure>
<ol>
<li>删除 <code>.git/config</code> 文件中如下内容:</li>
</ol>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">[submodule</span> <span class="string">"path_to_submodule"</span><span class="string">]</span></div><div class="line">    <span class="string">url</span> <span class="string">=</span> <span class="attr">https://github.com/XXX/hexo-theme-next.git</span></div></pre></td></tr></table></figure>
<ol>
<li><p>运行 <code>rm -rf .git/modules/themes/next</code></p>
</li>
<li><p>重新添加子模块 <code>git submodule add https://github.com/iissnan/hexo-theme-next.git</code></p>
</li>
</ol>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul>
<li><a href="https://stackoverflow.com/questions/20929336/git-submodule-add-a-git-directory-is-found-locally-issue" target="_blank" rel="external">https://stackoverflow.com/questions/20929336/git-submodule-add-a-git-directory-is-found-locally-issue</a></li>
</ul>
<h2 id="git中不记录子模块中文件的修改"><a href="#git中不记录子模块中文件的修改" class="headerlink" title="git中不记录子模块中文件的修改"></a>git中不记录子模块中文件的修改</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>在自己的git项目中添加了外部的git项目，有时候需要修改子模块中的文件，但是执行 <code>git status</code> 时又不想看到子模块文件的修改</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在 <code>.gitmodules</code> 中添加 <code>ignore = dirty</code> 设置，如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[submodule &quot;themes/next&quot;]</div><div class="line">	path = themes/next</div><div class="line">	url = https://github.com/iissnan/hexo-theme-next.git</div><div class="line">	branch = master</div><div class="line">	ignore = dirty</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git-submodule-add-“a-git-directory-is-found-locally”-issue&quot;&gt;&lt;a href=&quot;#Git-submodule-add-“a-git-directory-is-found-locally”-issue&quot; cl
    
    </summary>
    
      <category term="Git" scheme="http://bobjoy.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://bobjoy.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>[转]一个命令永久禁用Win10驱动程序强制签名</title>
    <link href="http://bobjoy.github.io/2017/07/23/%E8%BD%AC-%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E6%B0%B8%E4%B9%85%E7%A6%81%E7%94%A8Win10%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E5%BC%BA%E5%88%B6%E7%AD%BE%E5%90%8D/"/>
    <id>http://bobjoy.github.io/2017/07/23/转-一个命令永久禁用Win10驱动程序强制签名/</id>
    <published>2017-07-23T09:43:39.000Z</published>
    <updated>2017-12-20T09:26:53.774Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文地址：<a href="https://www.ithome.com/html/win10/196402.htm" target="_blank" rel="external">https://www.ithome.com/html/win10/196402.htm</a></p>
</blockquote>
<p>在Win10中，未经签名的驱动程序不能使用，这会导致部分硬件出现问题，此时就需要手动关闭Windows10的默认驱动验证。好在这个永久关闭验证的方法很简单，只需一个命令就可以搞定。</p>
<p><img src="https://img.ithome.com/newsuploadfiles/2015/12/20151223_124038_710.png" alt=""></p>
<p>▲要关闭强制验证只需执行第一个命令</p>
<p>步骤如下：</p>
<ol>
<li><p>在开始按钮点击右键，选择“命令提示符（管理员）”</p>
</li>
<li><p>执行以下命令（复制后，在命令提示符中单击鼠标右键即可完成粘贴，然后按回车键执行）：</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdedit.exe /set nointegritychecks on</div></pre></td></tr></table></figure>
<ol>
<li>命令瞬间执行完毕，若想恢复默认验证，执行如下命令即可：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdedit.exe /set nointegritychecks off</div></pre></td></tr></table></figure>
<p>如果你有未签名的硬件驱动需要使用，不妨尝试运行一下第一个命令，也许由此引发的问题就可以暂时解决。不过微软的驱动强制签名政策也是出于安全考虑，如果你没遇到类似问题，还是别关闭签名验证为好。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;https://www.ithome.com/html/win10/196402.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.ithome.com/html/win10
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记一次OPPO R9s清除锁屏密码即刷机过程</title>
    <link href="http://bobjoy.github.io/2017/07/23/%E8%AE%B0%E4%B8%80%E6%AC%A1OPPO-R9s%E5%88%B7%E6%9C%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://bobjoy.github.io/2017/07/23/记一次OPPO-R9s刷机过程/</id>
    <published>2017-07-23T08:10:06.000Z</published>
    <updated>2017-12-20T09:26:53.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事情缘由"><a href="#事情缘由" class="headerlink" title="事情缘由"></a>事情缘由</h2><p>事情经过是这样的，今天有人拿来一部手机给我，他说他忘记了锁屏的密码，让我帮忙解决一下，起初我想，不就是去除锁屏密码吗，对于我这个刷机无数的人来说小case。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>首先我们需要直到手机的品牌及型号，这个你可以通过查看手机知道，如果型号看不出来，你可以尝试连接电脑，豌豆荚会告诉你的，以下就是针对OPPO R9s的解决办法。</p>
<a id="more"></a>
<h3 id="方法一：双清"><a href="#方法一：双清" class="headerlink" title="方法一：双清"></a>方法一：双清</h3><p>安卓手机忘记解锁密码最用的解决办法就是进行双清操作了，它相当于恢复出厂设置，这种方法会导致个人数据丢失，双清之前，需要确保备份过数据或者手机中无重要数据。</p>
<p>双清操作方法：</p>
<p>首先将手机关机，长按「电源键」+「音量键+」不放，直到出现Recovery界面为止，进入Recovery模式，Recovery模式下使用音量键移动，电源键确认，按照下图的指示对手机进行清空数据和缓存操作，完成后重启手机即可，</p>
<p>注意：如果「电源键」+「音量键+」不能进入Recovery界面的话，可以尝试「电源键」+「音量键+」+「音量键-」</p>
<p>方法就是这么简单。。。。。</p>
<p>然鹅，事情并不是这么简单，选择「清除数据」电源键确认后，提示输入开机密码，只能另寻蹊径了</p>
<h3 id="方法二：借助刷机工具"><a href="#方法二：借助刷机工具" class="headerlink" title="方法二：借助刷机工具"></a>方法二：借助刷机工具</h3><p>如今很多安卓手机刷机工具都内置了解锁工具，可以快速清除手机密码，但前提是您的OPPO手机要能够正常连接电脑。只要你的OPPO R9s手机已经开启了USB调试模式，就可以将OPPO手机通过数据线连接电脑，然后通过电脑上的刷机精灵等工具，一键完成清空解锁密码。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机5.png" alt=""></p>
<p>注：也可以通过adb命令清除密码，adb工具上图中有，可自行搜索使用方法</p>
<p>然鹅鹅鹅，too easy，too young，该手机并没有开启USB调试模式，而且在锁屏情况下也无法开启USB调试模式，开来只能出杀手锏了—刷机。</p>
<h3 id="方法三：刷机"><a href="#方法三：刷机" class="headerlink" title="方法三：刷机"></a>方法三：刷机</h3><p>该方法中的手机比较特殊，如果使用刷机工具的话，必须开启USB调试模式，这里使用了针对OPPO（网传说OnePlus手机也可行）刷机。</p>
<h4 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h4><ul>
<li><p>高通9008驱动，下载地址：<a href="http://pan.baidu.com/s/1mhLJxl2" target="_blank" rel="external">http://pan.baidu.com/s/1mhLJxl2</a> 密码: 2dt7</p>
</li>
<li><p>刷机工具包，下载地址：<a href="http://pan.baidu.com/s/1mi7M4re" target="_blank" rel="external">http://pan.baidu.com/s/1mi7M4re</a> 密码: 8i8b</p>
</li>
</ul>
<h4 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h4><ol>
<li><p>如果你有未签名的硬件驱动需要使用，不妨尝试运行一下第一个命令，也许由此引发的问题就可以暂时解决。不过微软的驱动强制签名政策也是出于安全考虑，如果你没遇到类似问题，还是别关闭签名验证为好。</p>
<ol>
<li>在开始按钮点击右键，选择“命令提示符（管理员）”</li>
<li><p>执行以下命令（复制后，在命令提示符中单击鼠标右键即可完成粘贴，然后按回车键执行）：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdedit.exe /set nointegritychecks on</div></pre></td></tr></table></figure>
</li>
<li><p>命令瞬间执行完毕，若想恢复默认验证，执行如下命令即可：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdedit.exe /set nointegritychecks off</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>高通9008驱动</p>
</li>
<li><p>检查是否安装成功，手机开机并连接电脑，打开设备管理器，如果列表中有「端口（COM和LPT）」，则说明安装成功</p>
</li>
</ol>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机1.png" alt=""></p>
<h4 id="3-打开刷机工具开始刷机"><a href="#3-打开刷机工具开始刷机" class="headerlink" title="3. 打开刷机工具开始刷机"></a>3. 打开刷机工具开始刷机</h4><ol>
<li>解压刷机工具包，其中包含三个文件</li>
</ol>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机6.png" alt=""></p>
<ol>
<li>打开MsmDownloadTool工具</li>
</ol>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机2.png" alt=""></p>
<ol>
<li>手机关机状态下，「电源键」+「音量键+」连接电脑，点击MsmDownloadTool工具中的刷新按钮，连接状态显示已连接（如上图）即可，按F5可选择写入的文件，如果需要清除密码的话，需要勾选userdata项</li>
</ol>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机3.png" alt=""></p>
<ol>
<li>点击工具上的开始按钮，开始刷机，等待几分钟后刷机结束。</li>
</ol>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/oppo_r9s_刷机4.png" alt=""></p>
<ol>
<li>手机重启后，会进入ColorOS升级界面，等待升级完成后进入系统就大功告成了。</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://www.anzhuorom.com/jiaocheng/6049.html" target="_blank" rel="external">安卓刷机网</a></li>
<li><a href="http://www.gooln.com/" target="_blank" rel="external">古连网</a></li>
<li><a href="https://www.ithome.com/html/win10/196402.htm" target="_blank" rel="external">IT之家</a></li>
<li><a href="http://bbs.cnmo.com/thread-15769764-1-1.html" target="_blank" rel="external">手机中国论坛</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;事情缘由&quot;&gt;&lt;a href=&quot;#事情缘由&quot; class=&quot;headerlink&quot; title=&quot;事情缘由&quot;&gt;&lt;/a&gt;事情缘由&lt;/h2&gt;&lt;p&gt;事情经过是这样的，今天有人拿来一部手机给我，他说他忘记了锁屏的密码，让我帮忙解决一下，起初我想，不就是去除锁屏密码吗，对于我这个刷机无数的人来说小case。&lt;/p&gt;
&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;首先我们需要直到手机的品牌及型号，这个你可以通过查看手机知道，如果型号看不出来，你可以尝试连接电脑，豌豆荚会告诉你的，以下就是针对OPPO R9s的解决办法。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://bobjoy.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://bobjoy.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="刷机" scheme="http://bobjoy.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
      <category term="OPPO R9s" scheme="http://bobjoy.github.io/tags/OPPO-R9s/"/>
    
  </entry>
  
  <entry>
    <title>Java连接MySQL数据库,提示Establishing SSL connection without警告</title>
    <link href="http://bobjoy.github.io/2017/07/11/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93-%E6%8F%90%E7%A4%BAEstablishing-SSL-connection-without%E8%AD%A6%E5%91%8A/"/>
    <id>http://bobjoy.github.io/2017/07/11/Java连接MySQL数据库-提示Establishing-SSL-connection-without警告/</id>
    <published>2017-07-11T10:16:14.000Z</published>
    <updated>2017-12-20T09:26:53.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>Java在连接MySQL数据库时，输出如下警告信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div><div class="line">Tue Jul 11 18:04:07 CST 2017 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</div></pre></td></tr></table></figure>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol>
<li>在jdbc连接后添加 <code>useSSL=false</code> 参数</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url=jdbc:mysql://localhost:3306/es?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</div></pre></td></tr></table></figure>
<ol>
<li>如果以上办法无效，则需要替换 <code>mysql-connector-java</code> 依赖版本为 5.1.38 以下，如下</li>
</ol>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.37<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;Java在连接MySQL数据库时，输出如下警告信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
    
    </summary>
    
      <category term="Java" scheme="http://bobjoy.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bobjoy.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>百度网盘无法访问</title>
    <link href="http://bobjoy.github.io/2017/07/08/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"/>
    <id>http://bobjoy.github.io/2017/07/08/百度网盘无法访问/</id>
    <published>2017-07-08T07:41:10.000Z</published>
    <updated>2017-07-23T07:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>访问百度网盘下载文件，网站内容如下</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/201707081544.png" alt="pan_baidu_com"></p>
<a id="more"></a>
<p>解决办法如下：</p>
<ol>
<li><p>将IP地址添加到hosts文件(C:\WINDOWS\system32\drivers\etc\hosts)中</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">119.75.220.50 pan.baidu.com</div></pre></td></tr></table></figure>
</li>
<li><p>刷新页面就可以正常访问了</p>
</li>
</ol>
<blockquote>
<p>后来发现，不仅网盘，贴吧也出现相同的情况，归根揭底是因为在网络连接中配置了，将其改为自动获取或者其他DNS服务器地址<br><img src="http://7xkexv.dl1.z0.glb.clouddn.com/20170723/windows_dns_config.png" alt=""></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;访问百度网盘下载文件，网站内容如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkexv.dl1.z0.glb.clouddn.com/201707081544.png&quot; alt=&quot;pan_baidu_com&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://bobjoy.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://bobjoy.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hexo命令server无效</title>
    <link href="http://bobjoy.github.io/2017/06/28/Hexo%E5%91%BD%E4%BB%A4server%E6%97%A0%E6%95%88/"/>
    <id>http://bobjoy.github.io/2017/06/28/Hexo命令server无效/</id>
    <published>2017-06-28T08:37:35.000Z</published>
    <updated>2017-12-20T09:26:53.682Z</updated>
    
    <content type="html"><![CDATA[<p>按照好 <code>hexo-cli</code> 后， <code>hexo new</code> 创建一篇文章，然后 <code>hexo server</code> 本地运行调试，但是试了好几次都没反应，控制台直接打印帮助文档，然后命令帮助中也没有发现 <code>server</code> 命令，然后各种google，发现hexo3中 server 模块已经独立出来需要单独安装。 <code>npm install hexo-server</code> 安装后再运行 <code>hexo server</code> ，然鹅并没有什么卵用，继续google，发现一些hexo问题中提到plugins的配置，于是抱着试一试的态度将 <code>_config.yml</code> 中的plugins配置注释掉</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#plugins:</span></div><div class="line"><span class="comment">#- hexo-generator-feed</span></div><div class="line"><span class="comment">#- hexo-generator-sitemap</span></div></pre></td></tr></table></figure>
<p>再这运行，O啦</p>
<blockquote>
<p>2017-07-08 18:15 更新</p>
</blockquote>
<p>如果出现如下错误</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">TypeError: Cannot set property 'lastIndex' of undefined</div><div class="line">    at highlight (/home/rapiz/Blog/node_modules/highlight.js/lib/highlight.js:514:35)</div><div class="line">...</div></pre></td></tr></table></figure>
<p>则需要将 <code>_config.yml</code> 中的以下配置</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照好 &lt;code&gt;hexo-cli&lt;/code&gt; 后， &lt;code&gt;hexo new&lt;/code&gt; 创建一篇文章，然后 &lt;code&gt;hexo server&lt;/code&gt; 本地运行调试，但是试了好几次都没反应，控制台直接打印帮助文档，然后命令帮助中也没有发现 &lt;code&gt;s
    
    </summary>
    
      <category term="Hexo" scheme="http://bobjoy.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://bobjoy.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate查询MySQL抛出StringIndexOutOfBoundsException异常</title>
    <link href="http://bobjoy.github.io/2017/06/28/Hibernate%E6%9F%A5%E8%AF%A2MySQL%E6%8A%9B%E5%87%BAStringIndexOutOfBoundsException%E5%BC%82%E5%B8%B8/"/>
    <id>http://bobjoy.github.io/2017/06/28/Hibernate查询MySQL抛出StringIndexOutOfBoundsException异常/</id>
    <published>2017-06-28T08:08:31.000Z</published>
    <updated>2017-12-20T09:26:53.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><ol>
<li>查看数据表中是否有类型为char的字段A；</li>
<li>检查是否存在该字段A为空的记录；</li>
</ol>
<h2 id="处理方法"><a href="#处理方法" class="headerlink" title="处理方法"></a>处理方法</h2><ol>
<li>将该字段A为空的记录删除或者填充数据；</li>
<li>将char类型转换为varchar，比如：<code>select CONCAT(c, &#39;&#39;) str from demo</code>；</li>
</ol>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><ol>
<li>MySQL中char为固定长度，不能为空；</li>
<li>Hibernate中 <code>org.hibernate.type.descriptor.java.CharacterTypeDescriptor</code> 将char类型转换为java中的类型，会截取第一个字符 <code>Character.valueOf(str.charAt(0))</code> ，如果为空，则会出现下标越界 <code>StringIndexOutOfBoundsException</code> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> &lt;X&gt; <span class="function">Character <span class="title">wrap</span><span class="params">(X value, WrapperOptions options)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span>(value == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(Character.class.isInstance(value)) &#123;</div><div class="line">        <span class="keyword">return</span> (Character)value;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(String.class.isInstance(value)) &#123;</div><div class="line">        String str = (String)value;</div><div class="line">        <span class="keyword">return</span> Character.valueOf(str.charAt(<span class="number">0</span>));</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(Number.class.isInstance(value)) &#123;</div><div class="line">        Number nbr = (Number)value;</div><div class="line">        <span class="keyword">return</span> Character.valueOf((<span class="keyword">char</span>)nbr.shortValue());</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">this</span>.unknownWrap(value.getClass());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题排查&quot;&gt;&lt;a href=&quot;#问题排查&quot; class=&quot;headerlink&quot; title=&quot;问题排查&quot;&gt;&lt;/a&gt;问题排查&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;查看数据表中是否有类型为char的字段A；&lt;/li&gt;
&lt;li&gt;检查是否存在该字段A为空的记录；&lt;/li&gt;
&lt;/o
    
    </summary>
    
      <category term="Java" scheme="http://bobjoy.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://bobjoy.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>解决git fatal: Unable to find remote helper for &#39;https&#39;问题</title>
    <link href="http://bobjoy.github.io/2016/07/29/%E8%A7%A3%E5%86%B3git-fatal-Unable-to-find-remote-helper-for-https-%E9%97%AE%E9%A2%98/"/>
    <id>http://bobjoy.github.io/2016/07/29/解决git-fatal-Unable-to-find-remote-helper-for-https-问题/</id>
    <published>2016-07-29T01:49:29.000Z</published>
    <updated>2017-12-20T09:26:53.767Z</updated>
    
    <content type="html"><![CDATA[<p>登陆到远程linux服务器上，使用git, clone的时候报“fatal: Unable to find remote helper for ‘https’”错，没管，绕过，使用git clone git://….协议download下来项目。</p>
<p>但是到提交完要push回服务器的时候，必须得用https，搜了一下问题，是系统中没有curl，都是要装curl的，比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install curl-devel  #Ubuntu使用apt-get</div></pre></td></tr></table></figure>
<p>如果有如下提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">E: Unable to locate package curl-devel</div></pre></td></tr></table></figure>
<p>则需自己安装curl，从<a href="http://curl.haxx.se/download.html下载到最新的curl包：" target="_blank" rel="external">http://curl.haxx.se/download.html下载到最新的curl包：</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl-7.41.0.tar.gz</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>解压，然后make并安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ./configure --prefix=/usr/local/curl/</div><div class="line">$ make</div><div class="line">$ make install</div></pre></td></tr></table></figure>
<p>安装好后，再尝试<code>git push</code>，还是报一样的错。</p>
<p>想到应该需要重新编译并安装git，执行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./configure --prefix=/usr/local/git/ --with-curl=/usr/local/curl/</div></pre></td></tr></table></figure>
<p>注意这里一定要使用<code>--with-curl</code>参数，指定到上面安装的curl目录，git只有与curl库做link之后，才能使用https功能。</p>
<p>再次<code>make &amp; make install</code></p>
<p><code>git push</code>成功。</p>
<p>本次解决问题的经验教训：</p>
<p>实际上是重新编译时先使用<code>./configure --prefix=/usr/local/git/</code>未果后才思考的，执行<code>./configure --prefix=/usr/local/git/ &amp;&gt; config.log</code>，把log重定向到这个文件里打开，搜curl，发现curl的状态是no，表明这个configure没有找到curl，那么自然后面在make的时候也就无法完成link，然后<code>./configure -h</code>，看到<code>--with-curl</code>参数，想起需要指定，才搞定问题。</p>
<blockquote>
<p>参考链接：<a href="http://stackoverflow.com/questions/8329485/git-clone-fatal-unable-to-find-remote-helper-for-https" target="_blank" rel="external">http://stackoverflow.com/questions/8329485/git-clone-fatal-unable-to-find-remote-helper-for-https</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;登陆到远程linux服务器上，使用git, clone的时候报“fatal: Unable to find remote helper for ‘https’”错，没管，绕过，使用git clone git://….协议download下来项目。&lt;/p&gt;
&lt;p&gt;但是到提交完要push回服务器的时候，必须得用https，搜了一下问题，是系统中没有curl，都是要装curl的，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ yum install curl-devel  #Ubuntu使用apt-get&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果有如下提示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;E: Unable to locate package curl-devel&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;则需自己安装curl，从&lt;a href=&quot;http://curl.haxx.se/download.html下载到最新的curl包：&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://curl.haxx.se/download.html下载到最新的curl包：&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl-7.41.0.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程开发" scheme="http://bobjoy.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Git" scheme="http://bobjoy.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Web API接口之MutationObserver</title>
    <link href="http://bobjoy.github.io/2016/07/18/Web-API%E6%8E%A5%E5%8F%A3%E4%B9%8BMutationObserver/"/>
    <id>http://bobjoy.github.io/2016/07/18/Web-API接口之MutationObserver/</id>
    <published>2016-07-18T02:34:07.000Z</published>
    <updated>2017-12-20T09:26:53.720Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文地址：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver</a></p>
</blockquote>
<p>MutationObserver给开发者们提供了一种能在某个范围内的DOM树发生变化时作出适当反应的能力.该API设计用来替换掉在DOM3事件规范中引入的<a href="https://developer.mozilla.org/zh-CN/docs/DOM/Mutation_events" target="_blank" rel="external">Mutation事件</a>.</p>
<h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><h3 id="MutationObserver"><a href="#MutationObserver" class="headerlink" title="MutationObserver()"></a>MutationObserver()</h3><p>该构造函数用来实例化一个新的Mutation观察者对象.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">MutationObserver(</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">callback</span></span></div><div class="line">);</div></pre></td></tr></table></figure>
<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><strong>callback</strong></p>
<ul>
<li><p>该回调函数会在指定的DOM节点(目标节点)发生变化时被调用.在调用时,观察者对象会传给该函数两个参数,第一个参数是个包含了若干个<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver#MutationRecord" target="_blank" rel="external">MutationRecord</a>对象的数组,第二个参数则是这个观察者对象本身.</p>
<a id="more"></a>
<h2 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h2></li>
<li><p><code>void observe( Node target, optional MutationObserverInit options );</code></p>
</li>
<li><code>void disconnect();</code></li>
<li><code>Array takeRecords();</code></li>
</ul>
<h3 id="observe"><a href="#observe" class="headerlink" title="observe()"></a>observe()</h3><p>给当前观察者对象注册需要观察的目标节点,在目标节点(还可以同时观察其后代节点)发生DOM变化时收到通知.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> observe(</div><div class="line">  Node target,</div><div class="line">  optional MutationObserverInit options</div><div class="line">);</div></pre></td></tr></table></figure>
<h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><strong>target</strong></p>
<ul>
<li>观察该节点是否会发生DOM变化.</li>
</ul>
<p><strong>options</strong></p>
<ul>
<li>一个MutationObserverInit对象,指定要观察的DOM变化类型.</li>
</ul>
<blockquote>
<p>注：向一个元素添加 observer 和 addEventListener 类似，注册多次不会有任何影响。即是说，如果你注册了两次，回掉函数不会被调用两次，你也不必执行两次 disconnect() 以停止观察。换句话说，一旦某个元素被注册观察后，使用相同的 observer 实例再次注册不会发生任何变化。当然，如果回调对象不同，那么他会向这个元素添加另一个观察者。</p>
</blockquote>
<h3 id="disconnect"><a href="#disconnect" class="headerlink" title="disconnect()"></a>disconnect()</h3><p>让该观察者对象停止观察指定目标的DOM变化.直到再次调用其observe()方法,该观察者对象包含的回调函数都不会再被调用.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> disconnect();</div></pre></td></tr></table></figure>
<h3 id="takeRecords"><a href="#takeRecords" class="headerlink" title="takeRecords()"></a>takeRecords()</h3><p>清空观察者对象的记录队列,并返回里面的内容.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Array takeRecords();</div></pre></td></tr></table></figure>
<h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>返回一个包含了<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver#MutationRecord" target="_blank" rel="external">MutationRecords</a>对象的数组.</p>
<h2 id="MutationObserverInit"><a href="#MutationObserverInit" class="headerlink" title="MutationObserverInit"></a>MutationObserverInit</h2><p>MutationObserverInit是一个用来配置观察者对象行为的对象,该对象可以拥有下面这些属性:</p>
<p>&gt;<br>注:  childList, attributes, 或者characterData三个属性中必须至少有一个为true.否则,会抛出异常”An invalid or illegal string was specified”.</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>childList</td>
<td>如果需要观察目标节点的子节点(新增了某个子节点,或者移除了某个子节点),则设置为true.</td>
</tr>
<tr>
<td>attributes</td>
<td>如果需要观察目标节点的属性节点(新增或删除了某个属性,以及某个属性的属性值发生了变化),则设置为true.</td>
</tr>
<tr>
<td>characterData</td>
<td>如果目标节点为characterData节点(一种抽象接口,具体可以为文本节点,注释节点,以及处理指令节点)时,也要观察该节点的文本内容是否发生变化,则设置为true.</td>
</tr>
<tr>
<td>subtree</td>
<td>除了目标节点,如果还需要观察目标节点的所有后代节点(观察目标节点所包含的整棵DOM树上的上述三种节点变化),则设置为true.</td>
</tr>
<tr>
<td>attributeOldValue</td>
<td>在attributes属性已经设为true的前提下,如果需要将发生变化的属性节点之前的属性值记录下来(记录到下面MutationRecord对象的oldValue属性中),则设置为true.</td>
</tr>
<tr>
<td>characterDataOldValue</td>
<td>在characterData属性已经设为true的前提下,如果需要将发生变化的characterData节点之前的文本内容记录下来(记录到下面MutationRecord对象的oldValue属性中),则设置为true.</td>
</tr>
<tr>
<td>attributeFilter</td>
<td>一个属性名数组(不需要指定命名空间),只有该数组中包含的属性名发生变化时才会被观察到,其他名称的属性发生变化后会被忽略.</td>
</tr>
</tbody>
</table>
<h2 id="MutationRecord"><a href="#MutationRecord" class="headerlink" title="MutationRecord"></a>MutationRecord</h2><p>MutationRecord对象会作为第一个参数传递给观察者对象包含的回调函数,该对象有下面这些属性:</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>type</td>
<td>String</td>
<td>如果是属性发生变化,则返回attributes.如果是一个CharacterData节点发生变化,则返回characterData,如果是目标节点的某个子节点发生了变化,则返回childList.</td>
</tr>
<tr>
<td>target</td>
<td>Node</td>
<td>返回此次变化影响到的节点,具体返回那种节点类型是根据type值的不同而不同的. 如果type为attributes,则返回发生变化的属性节点所在的元素节点,如果type值为characterData,则返回发生变化的这个characterData节点.如果type为childList,则返回发生变化的子节点的父节点.</td>
</tr>
<tr>
<td>addedNodes</td>
<td>NodeList</td>
<td>返回被添加的节点,或者为null.</td>
</tr>
<tr>
<td>removedNodes</td>
<td>NodeList</td>
<td>返回被删除的节点,或者为null.</td>
</tr>
<tr>
<td>previousSibling</td>
<td>Node</td>
<td>返回被添加或被删除的节点的前一个兄弟节点,或者为null.</td>
</tr>
<tr>
<td>nextSibling</td>
<td>Node</td>
<td>返回被添加或被删除的节点的后一个兄弟节点,或者为null.</td>
</tr>
<tr>
<td>attributeName</td>
<td>String</td>
<td>返回变更属性的本地名称,或者为null.</td>
</tr>
<tr>
<td>attributeNamespace</td>
<td>String</td>
<td>返回变更属性的命名空间,或者为null.</td>
</tr>
<tr>
<td>oldValue</td>
<td>String</td>
<td>根据type值的不同,返回的值也会不同.如果type为 attributes,则返回该属性变化之前的属性值.如果type为characterData,则返回该节点变化之前的文本数据.如果type为childList,则返回null.</td>
</tr>
</tbody>
</table>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>下面的例子来自<a href="http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/" target="_blank" rel="external">这篇博文</a>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">// Firefox和Chrome早期版本中带有前缀</div><div class="line">var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver</div><div class="line"></div><div class="line">// 选择目标节点</div><div class="line">var target = document.querySelector(&apos;#some-id&apos;);</div><div class="line"> </div><div class="line">// 创建观察者对象</div><div class="line">var observer = new MutationObserver(function(mutations) &#123;</div><div class="line">  mutations.forEach(function(mutation) &#123;</div><div class="line">    console.log(mutation.type);</div><div class="line">  &#125;);    </div><div class="line">&#125;);</div><div class="line"> </div><div class="line">// 配置观察选项:</div><div class="line">var config = &#123; attributes: true, childList: true, characterData: true &#125;</div><div class="line"> </div><div class="line">// 传入目标节点和观察选项</div><div class="line">observer.observe(target, config);</div><div class="line"> </div><div class="line">// 随后,你还可以停止观察</div><div class="line">observer.disconnect();</div></pre></td></tr></table></figure>
<p>假设target为当前文档中某个已知的节点,observer为某个已经实例化的MutationObserver观察者对象,则:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">observer.observe(target, &#123;childList:true&#125;)                              //childList属性只观察子节点的新建与删除,子节点本身的任何变化都不会去理会  </div><div class="line">target.appendChild(document.createElement(&quot;div&quot;))                       //添加了一个元素子节点,触发回调函数.</div><div class="line">target.appendChild(document.createTextNode(&quot;foo&quot;))                      //添加了一个文本子节点,触发回调函数.</div><div class="line">target.removeChild(target.childNodes[0])                                //移除第一个子节点,触发回调函数.</div><div class="line">target.childNodes[0].appendChild(document.createElement(&quot;div&quot;))         //为第一个子节点添加一个子节点,不会触发回调函数,如果需要触发,则需要设置subtree属性为true.</div><div class="line"></div><div class="line"></div><div class="line">observer.observe(target, &#123;childList:true,subtree:true&#125;)                 //subtree属性让观察行为进行&quot;递归&quot;,这时,以target节点为根节点的整棵DOM树发生的变化都可能会被观察到 </div><div class="line">observer.observe(document, &#123;childList:true,subtree:true&#125;)               //如果target为document或者document.documentElement,则当前文档中所有的节点添加与删除操作都会被观察到</div><div class="line">observer.observe(document, &#123;childList:true,attributes:true,characterData:true,subtree:true&#125;)   //当前文档中几乎所有类型的节点变化都会被观察到(包括属性节点的变化和文本节点的变化等)</div><div class="line"></div><div class="line"></div><div class="line">observer.observe(target, &#123;childList:true&#125;)                              //假设此时target的outHTML内容为&lt;div&gt;foo&lt;div&gt;,则: </div><div class="line">target.childNodes[0].data = &quot;bar&quot;                                       //不会触发回调函数,因为childList只观察节点的新建与删除,而这里target节点的子节点仍然只有一个,没有多,没有少</div><div class="line">observer.observe(target, &#123;childList:true,characterData:true&#125;)           //加上characterData属性,允许观察文本节点的变化,行不行? </div><div class="line">target.childNodes[0].data = &quot;bar&quot;                                       //还是不会触发回调函数,因为发生变化的是target节点的子节点,我们目前的目标节点只有一个,就是target.</div><div class="line">observer.observe(target, &#123;childList:true,characterData:true,subtree:true&#125;)  //加上subtree属性,观察所有后代节点 </div><div class="line">target.childNodes[0].data = &quot;bar&quot;                                       //触发了回调函数,发生变化的是target节点的文本子节点(必须同时有characterData和subtree属性,才能观察到一个元素目标节点里的文本内容的变化)</div><div class="line"></div><div class="line"></div><div class="line">observer.observe(target, &#123;attributes:true&#125;)                             //只观察目标节点的属性节点</div><div class="line">target.setAttribute(&quot;foo&quot;,&quot;bar&quot;)                                        //不管foo属性存在不存在,都会触发回调函数</div><div class="line">target.setAttribute(&quot;foo&quot;,&quot;bar&quot;)                                        //即使前后两次的属性值一样,还是会触发回调函数</div><div class="line">target.removeAttribute(&quot;foo&quot;)                                           //移除foo属性节点,触发回调函数</div><div class="line">target.removeAttribute(&quot;foo&quot;)                                           //不会触发回调函数,因为已经没有属性节点可移除了</div><div class="line">observer.observe(target, &#123;attributes:true,attributeFilter:[&quot;bar&quot;]&#125;)     //指定要观察的属性名</div><div class="line">target.setAttribute(&quot;foo&quot;,&quot;bar&quot;)                                        //不会触发回调函数,因为attributeFilter数组不包含&quot;foo&quot;</div><div class="line">target.setAttribute(&quot;bar&quot;,&quot;foo&quot;)                                        //触发了回调函数,因为attributeFilter数组包含了&quot;bar&quot;</div></pre></td></tr></table></figure>
<h2 id="外部链接"><a href="#外部链接" class="headerlink" title="外部链接"></a>外部链接</h2><ul>
<li><a href="http://updates.html5rocks.com/2012/02/Detect-DOM-changes-with-Mutation-Observers" target="_blank" rel="external">A brief overview</a></li>
<li><a href="http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/" target="_blank" rel="external">A more in-depth discussion</a></li>
<li><a href="http://www.youtube.com/watch?v=eRZ4pO0gVWw" target="_blank" rel="external">A screencast by Chromium developer Rafael Weinstein</a></li>
<li><a href="http://code.google.com/p/mutation-summary/" target="_blank" rel="external">The mutation summary library</a></li>
<li><a href="http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#mutation-observers" target="_blank" rel="external">The DOM4 specification</a> which defines the MutationObserver interface</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MutationObserver给开发者们提供了一种能在某个范围内的DOM树发生变化时作出适当反应的能力.该API设计用来替换掉在DOM3事件规范中引入的&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/DOM/Mutation_events&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mutation事件&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;构造函数&quot;&gt;&lt;a href=&quot;#构造函数&quot; class=&quot;headerlink&quot; title=&quot;构造函数&quot;&gt;&lt;/a&gt;构造函数&lt;/h2&gt;&lt;h3 id=&quot;MutationObserver&quot;&gt;&lt;a href=&quot;#MutationObserver&quot; class=&quot;headerlink&quot; title=&quot;MutationObserver()&quot;&gt;&lt;/a&gt;MutationObserver()&lt;/h3&gt;&lt;p&gt;该构造函数用来实例化一个新的Mutation观察者对象.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MutationObserver(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callback&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;该回调函数会在指定的DOM节点(目标节点)发生变化时被调用.在调用时,观察者对象会传给该函数两个参数,第一个参数是个包含了若干个&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver#MutationRecord&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MutationRecord&lt;/a&gt;对象的数组,第二个参数则是这个观察者对象本身.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[转]基于视窗单位的排版</title>
    <link href="http://bobjoy.github.io/2016/07/14/%E8%BD%AC-%E5%9F%BA%E4%BA%8E%E8%A7%86%E7%AA%97%E5%8D%95%E4%BD%8D%E7%9A%84%E6%8E%92%E7%89%88/"/>
    <id>http://bobjoy.github.io/2016/07/14/转-基于视窗单位的排版/</id>
    <published>2016-07-14T00:31:37.000Z</published>
    <updated>2017-12-20T09:26:53.776Z</updated>
    
    <content type="html"><![CDATA[<p>我之前有写过基于<a href="http://www.w3cplus.com/css/rem-vs-em.html" target="_blank" rel="external">rem和em</a>的[响应式排版]，并且也有写过两篇有关模块化组件的博客。在这些文章中，有关视窗单位的评论不可避免的形成了一个话题。</p>
<p>曾经一段时间我十分抵制使用视窗单位，因为其中的计算实在让人感到十分痛苦。</p>
<p>上周，我终于克服了这个困难，决定探索一下视窗单位以及如何在响应式排版中使用它们。</p>
<p>在我们开始探索视窗单位以及如何运用它们之前，让我们先了解一下什么是视窗单位。</p>
<h3 id="什么是视窗单位"><a href="#什么是视窗单位" class="headerlink" title="什么是视窗单位?"></a>什么是视窗单位?</h3><hr>
<p>现在CSS中有关于视窗单位的可用种类主要有四种，他们是:</p>
<ul>
<li>vw:视窗宽度的百分比</li>
<li>vh:视窗高度的百分比</li>
<li>vmin:当前较小的vw和vh</li>
<li>vmax:当前较大的vw和vh</li>
</ul>
<p>在这种情况下，视窗，指的是浏览器屏幕。1vw就意味着1%的浏览器的宽度。100vw将意味着整个浏览器宽度。</p>
<p><img src="http://cdn.w3cplus.com/cdn/farfuture/xVCg6Vvwie8E41Dw5xpqQmUd3k83I0u4MSDvO3qA4MA/mtime:1459255814/sites/default/files/blogs/2016/1603/viewport-units.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我之前有写过基于&lt;a href=&quot;http://www.w3cplus.com/css/rem-vs-em.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rem和em&lt;/a&gt;的[响应式排版]，并且也有写过两篇有关模块化组件的博客。在这些文章中，有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SublimeText常用插件</title>
    <link href="http://bobjoy.github.io/2016/06/30/SublimeText%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    <id>http://bobjoy.github.io/2016/06/30/SublimeText常用插件/</id>
    <published>2016-06-30T00:32:47.000Z</published>
    <updated>2017-12-20T09:26:53.710Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Package-Control"><a href="#1-Package-Control" class="headerlink" title="1. Package Control"></a>1. <a href="https://sublime.wbond.net/installation" target="_blank" rel="external">Package Control</a></h4><p>作为安装 Sublime Text 插件的必备利器，Package Control 是这款编辑器的标配，可以方便开发人员快速安装需要的插件。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_package_control.png" alt=""></p>
<h4 id="2-Emmet"><a href="#2-Emmet" class="headerlink" title="2. Emmet"></a>2. <a href="http://emmet.io/" target="_blank" rel="external">Emmet</a></h4><p>Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具:</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_emmet.jpg" alt=""></p>
<p>基本上，大多数的文本编辑器都会允许你存储和重用一些代码块，我们称之为“片段”。虽然片段能很好地推动你得生产力，但大多数的实现都有这样一个缺点：你必须先定义你得代码片段，并且不能再运行时进行拓展。</p>
<p>Emmet把片段这个概念提高到了一个新的层次：你可以设置CSS形式的能够动态被解析的表达式，然后根据你所输入的缩写来得到相应的内容。Emmet是很成熟的并且非常适用于编写HTML/XML 和 CSS 代码的前端开发人员，但也可以用于编程语言。</p>
<h4 id="3-Seti-UI"><a href="#3-Seti-UI" class="headerlink" title="3. Seti_UI"></a>3. <a href="https://github.com/ctf0/Seti_ST3" target="_blank" rel="external">Seti_UI</a></h4><p>它不仅色彩漂亮、看着舒适，还支持很多文件类型图标，让整个编辑器焕然一新。Seti UI 最初是 Atom 编辑器上的主题，但很快被开发者移植到了 Sublime Text 和 WebStorm 等编辑器上，甚至 iTerm（终端）上也有。下面分别介绍 Seti UI 在这些编辑器上的主题设置。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_seti_ui.png" alt=""></p>
<a id="more"></a>
<h4 id="4-All-Autocomplete"><a href="#4-All-Autocomplete" class="headerlink" title="4. All Autocomplete"></a>4. <a href="https://github.com/alienhard/SublimeAllAutocomplete" target="_blank" rel="external">All Autocomplete</a></h4><p>Sublime Text 默认的 Autocomplete 功能只考虑当前的文件，而 AllAutocomplete 插件会搜索所有打开的文件来寻找匹配的提示词。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_all_complete.png" alt=""></p>
<h4 id="5-SublimeREPL"><a href="#5-SublimeREPL" class="headerlink" title="5. SublimeREPL"></a>5. <a href="https://github.com/wuub/SublimeREPL" target="_blank" rel="external">SublimeREPL</a></h4><p>这可能是对程序员最有用的插件。SublimeREPL 允许你在 Sublime Texxt 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_sublime_repl.png" alt=""></p>
<h4 id="6-DocBlockr"><a href="#6-DocBlockr" class="headerlink" title="6. DocBlockr"></a>6. <a href="https://github.com/spadgos/sublime-jsdocs" target="_blank" rel="external">DocBlockr</a></h4><p>如果你遵循的编码的风格很严格，这款插件能够使你的任务更容易。DocBlokr 帮助你创造你的代码注释，通过解析功能，参数，变量，并且自动添加基本项目。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_docblockr.png" alt=""></p>
<h4 id="7-Terminal"><a href="#7-Terminal" class="headerlink" title="7. Terminal"></a>7. <a href="https://github.com/wbond/sublime_terminal" target="_blank" rel="external">Terminal</a></h4><p>当你想要打开在当前文件所在的目录的终端，这个插件可以帮助你。不过，在默认情况下，它设置按 Ctrl / Cmd + Shift + T 键的快捷方式打开终端。不过这也是打开上次关闭的文件的快捷方式，你需要修改一个快捷键来兼容两个功能。</p>
<p><img src="http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_terminal.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-Package-Control&quot;&gt;&lt;a href=&quot;#1-Package-Control&quot; class=&quot;headerlink&quot; title=&quot;1. Package Control&quot;&gt;&lt;/a&gt;1. &lt;a href=&quot;https://sublime.wbond.net/installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package Control&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;作为安装 Sublime Text 插件的必备利器，Package Control 是这款编辑器的标配，可以方便开发人员快速安装需要的插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_package_control.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-Emmet&quot;&gt;&lt;a href=&quot;#2-Emmet&quot; class=&quot;headerlink&quot; title=&quot;2. Emmet&quot;&gt;&lt;/a&gt;2. &lt;a href=&quot;http://emmet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_emmet.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;基本上，大多数的文本编辑器都会允许你存储和重用一些代码块，我们称之为“片段”。虽然片段能很好地推动你得生产力，但大多数的实现都有这样一个缺点：你必须先定义你得代码片段，并且不能再运行时进行拓展。&lt;/p&gt;
&lt;p&gt;Emmet把片段这个概念提高到了一个新的层次：你可以设置CSS形式的能够动态被解析的表达式，然后根据你所输入的缩写来得到相应的内容。Emmet是很成熟的并且非常适用于编写HTML/XML 和 CSS 代码的前端开发人员，但也可以用于编程语言。&lt;/p&gt;
&lt;h4 id=&quot;3-Seti-UI&quot;&gt;&lt;a href=&quot;#3-Seti-UI&quot; class=&quot;headerlink&quot; title=&quot;3. Seti_UI&quot;&gt;&lt;/a&gt;3. &lt;a href=&quot;https://github.com/ctf0/Seti_ST3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Seti_UI&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;它不仅色彩漂亮、看着舒适，还支持很多文件类型图标，让整个编辑器焕然一新。Seti UI 最初是 Atom 编辑器上的主题，但很快被开发者移植到了 Sublime Text 和 WebStorm 等编辑器上，甚至 iTerm（终端）上也有。下面分别介绍 Seti UI 在这些编辑器上的主题设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xkexv.dl1.z0.glb.clouddn.com/tools/st_seti_ui.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS正则表达式</title>
    <link href="http://bobjoy.github.io/2016/06/29/JS%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://bobjoy.github.io/2016/06/29/JS正则表达式/</id>
    <published>2016-06-29T04:27:39.000Z</published>
    <updated>2017-12-20T09:26:53.686Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式中的特殊字符</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含意</th>
</tr>
</thead>
<tbody>
<tr>
<td>\</td>
<td>做为转意，即通常在”\”后面的字符不按原来意义解释，如/b/匹配字符”b”，当b前面加了反斜杆后/\b/，转意为匹配一个单词的边界。 -或- 对正则表达式功能字符的还原，如”<em>“匹配它前面元字符0次或多次，/a</em>/将匹配a,aa,aaa，加了”\”后，/a*/将只匹配”a*”。</td>
</tr>
<tr>
<td>^</td>
<td>匹配一个输入或一行的开头，/^a/匹配”an A”，而不匹配”An a”</td>
</tr>
<tr>
<td>$</td>
<td>匹配一个输入或一行的结尾，/a$/匹配”An a”，而不匹配”an A”</td>
</tr>
<tr>
<td>*</td>
<td>匹配前面元字符0次或多次，/ba*/将匹配b,ba,baa,baaa</td>
</tr>
<tr>
<td>+</td>
<td>匹配前面元字符1次或多次，/ba*/将匹配ba,baa,baaa</td>
</tr>
<tr>
<td>?</td>
<td>匹配前面元字符0次或1次，/ba*/将匹配b,ba</td>
</tr>
<tr>
<td>(x)</td>
<td>匹配x保存x在名为$1…$9的变量中</td>
</tr>
<tr>
<td>xly</td>
<td>匹配x或y(l代表竖线)</td>
</tr>
<tr>
<td>{n}</td>
<td>精确匹配n次</td>
</tr>
<tr>
<td>{n,}</td>
<td>匹配n次以上</td>
</tr>
<tr>
<td>{n,m}</td>
<td>匹配n-m次</td>
</tr>
<tr>
<td>[xyz]</td>
<td>字符集(character set)，匹配这个集合中的任一一个字符(或元字符)</td>
</tr>
<tr>
<td>[^xyz]</td>
<td>不匹配这个集合中的任何一个字符</td>
</tr>
<tr>
<td>[\b]</td>
<td>匹配一个退格符</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个单词的边界</td>
</tr>
<tr>
<td>\B</td>
<td>匹配一个单词的非边界</td>
</tr>
<tr>
<td>\cX</td>
<td>这儿，X是一个控制符，/\cM/匹配Ctrl-M</td>
</tr>
<tr>
<td>\d</td>
<td>匹配一个字数字符，/\d/ = /[0-9]/</td>
</tr>
<tr>
<td>\D</td>
<td>匹配一个非字数字符，/\D/ = /[^0-9]/</td>
</tr>
<tr>
<td>\n</td>
<td>匹配一个换行符</td>
</tr>
<tr>
<td>\r</td>
<td>匹配一个回车符</td>
</tr>
<tr>
<td>\s</td>
<td>匹配一个空白字符，包括\n,\r,\f,\t,\v等</td>
</tr>
<tr>
<td>\S</td>
<td>匹配一个非空白字符，等于/[^\n\f\r\t\v]/</td>
</tr>
<tr>
<td>\t</td>
<td>匹配一个制表符</td>
</tr>
<tr>
<td>\v</td>
<td>匹配一个重直制表符</td>
</tr>
<tr>
<td>\w</td>
<td>匹配一个可以组成单词的字符(alphanumeric，这是我的意译，含数字)，包括下划线，如[\w]匹配”$5.98”中的5，等于[a-zA-Z0-9]</td>
</tr>
<tr>
<td>\W</td>
<td>匹配一个不可以组成单词的字符，如[\W]匹配”$5.98”中的$，等于[^a-zA-Z0-9]。</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p>用re = new RegExp(“pattern”,[“flags”]) 的方式比较好<br>pattern : 正则表达式<br>flags: g （全文查找出现的所有 pattern）<br>i （忽略大小写）<br>m （多行查找）</p>
<p>vaScript动态正则表达式问题<br>请问正则表达式可以动态生成吗?<br>例如JavaScript中:<br>var str = “strTemp”;<br>要生成:<br>var re = /strTemp/;<br>如果是字符连接:<br>var re = “/“ + str + “/“即可<br>但是要生成表达式,可以实现吗?怎样实现?</p>
<p>正则表达式是一个描述字符模式的对象。<br>JavaScript的RegExp对象和String对象定义了使用正则表达式来执行强大的模式匹配和文本检索与替换函数的方法.<br>在JavaScript中,正则表达式是由一个RegExp对象表示的.当然,可以使用一个RegExp()构造函数来创建RegExp对象,<br>也可以用JavaScript 1.2中的新添加的一个特殊语法来创建RegExp对象.就像字符串直接量被定义为包含在引号内的字符一样,<br>正则表达式直接量也被定义为包含在一对斜杠(/)之间的字符.所以,JavaScript可能会包含如下的代码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var pattern = /s$/;</div></pre></td></tr></table></figure>
<p>这行代码创建一个新的RegExp对象,并将它赋给变量parttern.这个特殊的RegExp对象和所有以字母”s”结尾的字符串都匹配.用RegExp()也可以定义<br>一个等价的正则表达式,代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var pattern = new RegExp(&quot;s$&quot;);</div></pre></td></tr></table></figure>
<p>无论是用正则表达式直接量还是用构造函数RegExp(),创建一个RegExp对象都是比较容易的.较为困难的任务是用正则表达式语法来描述字符的模式.</p>
<p>JavaScript采用的是Perl语言正则表达式语法的一个相当完整的子集.<br>正则表达式的模式规范是由一系列字符构成的.大多数字符(包括所有字母数字字符)描述的都是按照字面意思进行匹配的字符.这样说来,正则表达式/java/就和所有包含子串 “java” 的字符串相匹配.虽然正则表达式中的其它字符不是按照字面意思进行匹配的,但它们都具有特殊的意义.正则表达式 /s$/ 包含两个字符. 第一个特殊字符 “s” 是按照字面意思与自身相匹配.第二个字符 “$” 是一个特殊字符,它所匹配的是字符串的结尾.所以正则表达式 /s$/ 匹配的就是以字母 “s” 结尾的字符串.</p>
<p>1.直接量字符</p>
<p>我们已经发现了,在正则表达式中所有的字母字符和数字都是按照字面意思与自身相匹配的.JavaScript的正则表达式还通过以反斜杠()开头的转义序列支持某些非字母字符.例如,序列 “\n” 在字符串中匹配的是一个直接量换行符.在正则表达式中,许多标点符号都有特殊的含义.下面是这些字符和它们的含义:<br>正则表达式的直接量字符</p>
<p>字符 匹配</p>
<hr>
<table>
<thead>
<tr>
<th>字母数字字符</th>
<th>自身</th>
</tr>
</thead>
<tbody>
<tr>
<td>\f</td>
<td>换页符</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\r</td>
<td>回车</td>
</tr>
<tr>
<td>\t</td>
<td>制表符</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>\/</td>
<td>一个 / 直接量</td>
</tr>
<tr>
<td>\</td>
<td>一个 \ 直接量</td>
</tr>
<tr>
<td>.</td>
<td>一个 . 直接量</td>
</tr>
<tr>
<td>*</td>
<td>一个 * 直接量</td>
</tr>
<tr>
<td>+</td>
<td>一个 + 直接量</td>
</tr>
<tr>
<td>\?</td>
<td>一个 ? 直接量</td>
</tr>
<tr>
<td>\l</td>
<td>一个 l 直接量(竖线)</td>
</tr>
<tr>
<td>(</td>
<td>一个 ( 直接量</td>
</tr>
<tr>
<td>)</td>
<td>一个 ) 直接量</td>
</tr>
<tr>
<td>[</td>
<td>一个 [ 直接量</td>
</tr>
<tr>
<td>]</td>
<td>一个 ] 直接量</td>
</tr>
<tr>
<td>{</td>
<td>一个 { 直接量</td>
</tr>
<tr>
<td>}</td>
<td>一个 } 直接量</td>
</tr>
<tr>
<td>\XXX</td>
<td>由十进制数 XXX 指 定的ASCII码字符</td>
</tr>
<tr>
<td>\Xnn</td>
<td>由十六进制数 nn 指定的ASCII码字符</td>
</tr>
<tr>
<td>\cX</td>
<td>控制字符^X. 例如, \cI等价于 \t, \cJ等价于 \n</td>
</tr>
</tbody>
</table>
<hr>
<p>如果想在正则表达式中使用特殊的标点符号,必须在它们之前加上一个 “\” .</p>
<p>2.字符类<br>将单独的直接符放进中括号内就可以组合成字符类.一个字符类和它所包含的任何一个字符都匹配,所以正则表达式 / [abc] / 和字母 “a” , “b” , “c” 中的任何一个都匹配.另外还可以定义否定字符类,这些类匹配的是除那些包含在中括号之内的字符外的所有字符.定义否定字符尖时,要将一个 ^ 符号作为从左中括号算起的第一个字符.正则表达式的集合是 / [a-zA-z0-9] / .<br>由于某些字符类非常常用,所以JavaScript的正则表达式语法包含一些特殊字符和转义序列来表示这些常用的类.例如, \s 匹配的是空格符,制表符和其它空白符, \s 匹配的则是空白符之外的任何字符.<br>正则表灰式的字符类<br>字符 匹配</p>
<hr>
<p>[…] 位于括号之内的任意字符<br>[^…] 不在括号之中的任意字符<br>. 除了换行符之外的任意字符,等价于[^\n]<br>\w 任何单字字符, 等价于[a-zA-Z0-9]<br>\W 任何非单字字符,等价于[^a-zA-Z0-9]<br>\s 任何空白符,等价于[\ t \ n \ r \ f \ v]<br>\S 任何非空白符,等价于[^\ t \ n \ r \ f \ v]<br>\d 任何数字,等价于[0-9]<br>\D 除了数字之外的任何字符,等价于[^0-9]<br>[\b] 一个退格直接量(特例)</p>
<hr>
<p>3.复制<br>用以上的正则表式的语法,可以把两位数描述成 / \ d \ d /,把四位数描述成 / \d \ d \ d \ d /.但我们还没有一种方法可以用来描述具有任意多数位的数字或者是一个字符串.这个串由三个字符以及跟随在字母之后的一位数字构成.这些复杂的模式使用的正则表达式语法指定了该表达式中每个元素要重复出现的次数.<br>指定复制的字符总是出现在它们所作用的模式后面.由于某种复制类型相当常用.所以有一些特殊的字符专门用于表示它们.例如: +号匹配的就是复制前一模式一次或多次的模式.下面的表列出了复制语法.先看一个例子:<br>/\d{2, 4}/ //匹配2到4间的数字.<br>/\w{3} \d?/ //匹配三个单字字符和一个任意的数字.<br>/\s+java\s+/ //匹配字符串”java” ,并且该串前后可以有一个或多个空格.<br>/[^”] * / //匹配零个或多个非引号字符.</p>
<p>正则表达式的复制字符<br>字符 含义</p>
<hr>
<p>{n, m} 匹配前一项至少n次,但是不能超过m次<br>{n, } 匹配前一项n次,或者多次<br>{n} 匹配前一项恰好n次<br>? 匹配前一项0次或1次,也就是说前一项是可选的. 等价于 {0, 1}</p>
<ul>
<li>匹配前一项1次或多次,等价于{1,}</li>
</ul>
<ul>
<li>匹配前一项0次或多次.等价于{0,}</li>
</ul>
<hr>
<p>4.选择,分组和引用</p>
<p>正则表达式的语法还包括指定选择项,对子表达式分组和引用前一子表达式的特殊字符.字符| 用于分隔供选择的字符.例如: /ab|cd|ef/ 匹配的是字符串 “ab”,或者是字符串 “cd”,又或者 “ef”. /\d{3}|[a-z]{4}/ 匹配的是要么是一个三位数,要么是四个小写字母.在正则表达式中括号具有几种作用.它的主要作用是把单独的项目分组成子表达式,以便可以像处理一个独立的单元那种用 *、+或? 来处理那些项目.例如: /java(script) ?/ 匹配的是字符串 “java”,其后既可以有 “script”,也可以没有. /</p>
<p>(ab|cd) + |ef) / 匹配的既可以是字符串 “ef”,也可以是字符串”ab” 或者 “cd” 的一次或多次重复.<br>在正则表达式中,括号的第二个用途是在完整的模式中定义子模式。当一个正则表达式成功地和目标字符串相匹配时,可以从目标串中抽出和括号中的子模式相匹配的部分.例如,假定我们正在检索的模式是一个或多个字母后面跟随一位或多位数字,那么我们可以使用模式 / [a-z] + \ d+/.但是由于假定我们真正关心的是每个匹配尾部的数字,那么如果我们将模式的数字部分放在括号中 (/ [a-z] + (\d+)/) ,我们就可以从所检索到的任何匹配中抽取数字了,之后我们会对此进行解析的.<br>代括号的子表达式的另一个用途是,允许我们在同一正则表达式的后面引用前面的子表达式.这是通过在字符串 \ 后加一位或多位数字来实现的.数字指的是代括号的子表达式在正则表达式中的位置.例如: \1 引用的是第一个代括号的子表达式. \3 引用的是第三个代括号的子表达式.注意,由于子表达式可以嵌套在其它子表达式中,<br>所以它的位置是被计数的左括号的位置.</p>
<p>例如:在下面的正则表达式被指定为 \2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/([Jj]ava([Ss]cript)) \sis \s (fun\w*) /</div></pre></td></tr></table></figure>
<p>对正则表达式中前一子表达式的引用所指定的并不是那个子表达式的模式,而是与那个模式相匹配的文本.这样,引用就不只是帮助你输入正则表达式的重复部分的快<br>捷方式了,它还实施了一条规约,那就是一个字符串各个分离的部分包含的是完全相同的字符.例如:下面的正则表达式匹配的就是位于单引号或双引号之内的所有字符.但是,它要求开始和结束的引号匹配(例如两个都是双引号或者都是单引号):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/[&apos; &quot;] [^ &apos; &quot;]*[&apos; &quot;]/</div></pre></td></tr></table></figure>
<p>如果要求开始和结束的引号匹配,我们可以使用如下的引用:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/( [&apos; &quot;] ) [^ &apos; &quot;] * \1/</div></pre></td></tr></table></figure>
<p>\1匹配的是第一个代括号的子表达式所匹配的模式.在这个例子中,它实施了一种规约,那就是开始的引号必须和结束的引号相匹配.注意,如果反斜杠后跟随的数字比代括号的子表达式数多,那么它就会被解析为一个十进制的转义序列,而不是一个引用.你可以坚持使用完整的三个字符来表示转义序列,这们就可以避免混淆了.例如, 使用 \044,而不是\44.下面是正则表达式的选择、分组和引用字符:</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>\</td>
<td></td>
<td>选择.匹配的要么是该符号左边的子表达式,要么它右边的子表达式</td>
</tr>
<tr>
<td>(…)</td>
<td>分组.将几个项目分为一个单元.这个单元可由 *、+、？和</td>
<td>等符号使用,而且还可以记住和这个组匹配的字符以供此后引</td>
</tr>
</tbody>
</table>
<p>用使用<br>\n | 和第n个分组所匹配的字符相匹配.分组是括号中的子表达式(可能是嵌套的).分组号是从左到右计数的左括号数</p>
<p>5.指定匹配的位置</p>
<p>我们已经看到了,一个正则表达式中的许多元素才能够匹配字符串的一个字符.例如: \s 匹配的只是一个空白符.还有一些正则表达式的元素匹配的是字符之间宽度为0的空间,而不是实际的字符例如: \b 匹配的是一个词语的边界,也就是处于一个/w字字符和一个\w非字字符之间的边界.像\b 这样的字符并不指定任何一个匹配了的字符串中的字符,它们指定的是匹配所发生的合法位置.有时我们称这些元素为正则表达式的锚.因为它们将模式定位在检索字符串中的一个特定位置.最常用的锚元素是 ^, 它使模式依赖于字符串的开头,而锚元素$则使模式定位在字符串的末尾.</p>
<p>例如:要匹配词 “javascript” ,我们可以使用正则表达式 /^ javascript $/. 如果我们想检索 “java” 这个词自身 (不像在 “javascript” 中那样作为前缀),那么我们可以使用模式 /\s java \s /, 它要求在词语java之前和之后都有空格.但是这样作有两个问题.第一: 如果 “java” 出现在一个字符的开头或者是结尾.该模式就不会与之匹配,除非在开头和结尾处有一个空格. 第二: 当这个模式找到一个与之匹配的字符时,它返回的匹配的字符串前端和后端都有空格,这并不是我们想要的.因此,我们使用词语的边界 \b 来代替真正的空格符 \s 进行匹配. 结果表达式是 /\b java \b/.<br>下面是正则表达式的锚字符:</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>^</td>
<td>匹配的是字符的开头,在多行检索中,匹配的是一行的开头</td>
</tr>
<tr>
<td>$</td>
<td>匹配的是字符的结尾,在多行检索中,匹配的是一行的结尾</td>
</tr>
<tr>
<td>\b</td>
<td>匹配的是一个词语的边界.简而言之就是位于字符\w 和 \w之间的位置(注意:[\b]匹配的是退格符)</td>
</tr>
<tr>
<td>\B</td>
<td>匹配的是非词语的边界的字符</td>
</tr>
</tbody>
</table>
<p>6.属性</p>
<p>有关正则表达式的语法还有最后一个元素,那就是正则表达式的属性,它说明的是高级模式匹配的规则.和其它正则表达式语法不同,属性是在 / 符号之外说明的.即它们不出现在两个斜杠之间,而是位于第二个斜杠之后.javascript 1.2支持两个属性.属性 i 说明模式匹配应该是大小写不敏感的.属性 g 说明模式匹配应该是全局的.也<br>就是说,应该找出被检索的字符串中所有的匹配.这两种属性联合起来就可以执行一个全局的,大小写不敏感的匹配.</p>
<p>例如: 要执行一个大小不敏感的检索以找到词语 “java” (或者是 “java” 、”JAVA”等) 的第一个具体值,我们可以使用大小不敏感的正则表达式 /\b java\b/i .如果要在一个字符串中找到 “java” 所有的具体值,我们还可以添加属性 g, 即 /\b java \b/gi .</p>
<p>以下是正则表达式的属性:</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>执行大小写不敏感的匹配</td>
</tr>
<tr>
<td>g</td>
<td>执行一个全局的匹配,简而言之,就是找到所有的匹配,而不是在找到第一个之后就停止了</td>
</tr>
</tbody>
</table>
<p>除属性 g 和 i 之外,正则表达式就没有其它像属性一样的特性了.如果将构造函数 RegExp 的静态属性 multiline 设置为 true ,那么模式匹配将以多行的模式进行.在这种模式下,锚字符 ^ 和 $ 匹配的不只是检索字符串的开头和结尾,还匹配检索字符串内部的一行的开头和结尾.例如: 模式 /Java$/ 匹配的是 “Java”,但是并不匹配<br>“Java\nis fun” .如果我们设置了 multiline 属性,那么后者也将被匹配:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RegExp.multiline = true;</div></pre></td></tr></table></figure>
<p>在JAVASCRIPT里面判断一个字符串是否是电子邮件的格式：</p>
<p>代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">if(formname.email.value != formname.email.value.match(/^\w +[@]\w +[.][\w.] +$/))</div><div class="line">&#123;</div><div class="line">  alert(&quot;您的电子邮件格式错误！&quot;);</div><div class="line">  formname.email.focus();</div><div class="line">  return false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function dateVerify(date) &#123;</div><div class="line">  var reg = /^(\d&#123;4&#125;)(-)(\d&#123;2&#125;)\2(\d&#123;2&#125;)$/;</div><div class="line">  var r = date.match(reg);</div><div class="line">  if(r == null) return false;</div><div class="line">  var d = new Date(r[1], r[3]-1,r[4]);</div><div class="line">  var newStr = d.getFullYear()+r[2]+(d.getMonth()+1)+r[2]+d.getDate();</div><div class="line">  date = r[1]+r[2]+((r[3]-1)+1)+r[2]+((r[4]-1)+1);</div><div class="line">  return newStr == date;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>javascript的17种正则表达式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&quot;^\\d+$&quot;　　//非负整数（正整数 + 0）</div><div class="line">&quot;^[0-9]*[1-9][0-9]*$&quot;　　//正整数</div><div class="line">&quot;^((-\\d+)|(0+))$&quot;　　//非正整数（负整数 + 0）</div><div class="line">&quot;^-[0-9]*[1-9][0-9]*$&quot;　　//负整数</div><div class="line">&quot;^-?\\d+$&quot;　　　　//整数</div><div class="line">&quot;^\\d+(\\.\\d+)?$&quot;　　//非负浮点数（正浮点数 + 0）</div><div class="line">&quot;^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$&quot;　　//正浮点数</div><div class="line">&quot;^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$&quot;　　//非正浮点数（负浮点数 + 0）</div><div class="line">&quot;^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$&quot;　　//负浮点数</div><div class="line">&quot;^(-?\\d+)(\\.\\d+)?$&quot;　　//浮点数</div><div class="line">&quot;^[A-Za-z]+$&quot;　　//由26个英文字母组成的字符串</div><div class="line">&quot;^[A-Z]+$&quot;　　//由26个英文字母的大写组成的字符串</div><div class="line">&quot;^[a-z]+$&quot;　　//由26个英文字母的小写组成的字符串</div><div class="line">&quot;^[A-Za-z0-9]+$&quot;　　//由数字和26个英文字母组成的字符串</div><div class="line">&quot;^\\w+$&quot;　　//由数字、26个英文字母或者下划线组成的字符串</div><div class="line">&quot;^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$&quot;　　　　//email地址</div><div class="line">&quot;^[a-zA-z]+://(\\w+(-\\w+)*)(\\.(\\w+(-\\w+)*))*(\\?\\S*)?$&quot;　　//url</div></pre></td></tr></table></figure>
<p>正则表达式对象的属性及方法</p>
<p>预定义的正则表达式拥有有以下静态属性：input, multiline, lastMatch, lastParen, leftContext, rightContext和$1到$9。其中input和multiline可以预设置。其他属性的值在执行过exec或test方法后被根据不同条件赋以不同的值。许多属性同时拥有长和短(perl风格)的两个名字，并且，这两个名字指向同一个值。(JavaScript模拟perl的正则表达式)</p>
<p>正则表达式对象的属性</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>$1…$9</td>
<td>如果它(们)存在，是匹配到的子串</td>
</tr>
<tr>
<td>$_</td>
<td>参见input</td>
</tr>
<tr>
<td>$*</td>
<td>参见multiline</td>
</tr>
<tr>
<td>$&amp;</td>
<td>参见lastMatch</td>
</tr>
<tr>
<td>$+</td>
<td>参见lastParen</td>
</tr>
<tr>
<td>$`</td>
<td>参见leftContext</td>
</tr>
<tr>
<td>$’’</td>
<td>参见rightContext</td>
</tr>
<tr>
<td>constructor</td>
<td>创建一个对象的一个特殊的函数原型</td>
</tr>
<tr>
<td>global</td>
<td>是否在整个串中匹配(bool型)</td>
</tr>
<tr>
<td>ignoreCase</td>
<td>匹配时是否忽略大小写(bool型)</td>
</tr>
<tr>
<td>input</td>
<td>被匹配的串</td>
</tr>
<tr>
<td>lastIndex</td>
<td>最后一次匹配的索引</td>
</tr>
<tr>
<td>lastParen</td>
<td>最后一个括号括起来的子串</td>
</tr>
<tr>
<td>leftContext</td>
<td>最近一次匹配以左的子串</td>
</tr>
<tr>
<td>multiline</td>
<td>是否进行多行匹配(bool型)</td>
</tr>
<tr>
<td>prototype</td>
<td>允许附加属性给对象</td>
</tr>
<tr>
<td>rightContext</td>
<td>最近一次匹配以右的子串</td>
</tr>
<tr>
<td>source</td>
<td>正则表达式模式</td>
</tr>
<tr>
<td>lastIndex</td>
<td>最后一次匹配的索引</td>
</tr>
</tbody>
</table>
<p>正则表达式对象的方法</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>compile</td>
<td>正则表达式比较</td>
</tr>
<tr>
<td>exec</td>
<td>执行查找</td>
</tr>
<tr>
<td>test</td>
<td>进行匹配</td>
</tr>
<tr>
<td>toSource</td>
<td>返回特定对象的定义(literal representing)，其值可用来创建一个新的对象。重载Object.toSource方法得到的。</td>
</tr>
<tr>
<td>toString</td>
<td>返回特定对象的串。重载Object.toString方法得到的。</td>
</tr>
<tr>
<td>valueOf</td>
<td>返回特定对象的原始值。重载Object.valueOf方法得到</td>
</tr>
</tbody>
</table>
<p>例子</p>
<p>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script language = <span class="string">"JavaScript"</span>&gt;</div><div class="line">  <span class="keyword">var</span> myReg = <span class="regexp">/(w+)s(w+)/</span>;</div><div class="line">  <span class="keyword">var</span> str = <span class="string">"John Smith"</span>;</div><div class="line">  <span class="keyword">var</span> newstr = str.replace(myReg, <span class="string">"$2, $1"</span>);</div><div class="line">  <span class="built_in">document</span>.write(newstr);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<p>将输出”Smith, John”</p>
<p>javascript正则表达式检验</p>
<p>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//校验是否全由数字组成</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDigit</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[0-9]&#123;1,20&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验登录名：只能输入5-20个以字母开头、可带数字、“_”、“.”的字串</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isRegisterUserName</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[a-zA-Z]&#123;1&#125;([a-zA-Z0-9]|[._])&#123;4,19&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验用户姓名：只能输入1-30个以字母开头的字串</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isTrueName</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[a-zA-Z]&#123;1,30&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验密码：只能输入6-20个字母、数字、下划线</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPasswd</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^(\w)&#123;6,20&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验普通电话、传真号码：可以“+”开头，除数字外，可含有“-”</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isTel</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="comment">//var patrn = /^[+]&#123;0,1&#125;(\d)&#123;1,3&#125;[ ]?([-]?(\d)&#123;1,12&#125;)+$/;</span></div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[+]&#123;0,1&#125;(\d)&#123;1,3&#125;[ ]?([-]?((\d)|[ ])&#123;1,12&#125;)+$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验手机号码：必须以数字开头，除数字外，可含有“-”</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMobil</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[+]&#123;0,1&#125;(\d)&#123;1,3&#125;[ ]?([-]?((\d)|[ ])&#123;1,12&#125;)+$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//校验邮政编码</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPostalCode</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="comment">//var patrn = /^[a-zA-Z0-9]&#123;3,12&#125;$/;</span></div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[a-zA-Z0-9 ]&#123;3,12&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"><span class="comment">//校验搜索关键字</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isSearch</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[^`~!@#$%^&amp;*()+=|\\\][\]\&#123;\&#125;:;'\,.&lt;&gt;/?]&#123;1&#125;[^`~!@$%^&amp;()+=|\\\][\]\&#123;\&#125;:;'\,.&lt;&gt;?]&#123;0,19&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isIP</span>(<span class="params">s</span>) //<span class="title">by</span> <span class="title">zergling</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">var</span> patrn = <span class="regexp">/^[0-9.]&#123;1,20&#125;$/</span>;</div><div class="line">  <span class="keyword">if</span> (!patrn.exec(s)) <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>正则表达式regular expression详述(一)</p>
<p>正则表达式是regular expression，看来英文比中文要好理解多了，就是检查表达式符<br>不符合规定！！正则表达式有一个功能十分强大而又十分复杂的对象RegExp，在JavaScript1.2 版本以上提供。</p>
<p>下面我们看看有关正则表达式的介绍：</p>
<p>正则表达式对象用来规范一个规范的表达式(也就是表达式符不符合特定的要求，比如是不是Email地址格式等)，它具有用来检查给出的字符串是否符合规则的属性和方法。</p>
<p>除此之外，你用RegExp构造器建立的个别正则表达式对象的属性，就已经预先定义好了正则表达式对象的静态属性，你可以随时使用它们。</p>
<p>核心对象：</p>
<p>在JavaScript 1.2, NES 3.0以上版本提供。</p>
<p>在JavaScript 1.3以后版本增加了toSource方法。</p>
<p>建立方法：</p>
<p>文字格式或RegExp构造器函数。</p>
<p>文字建立格式使用以下格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/pattern/flags即/模式/标记</div></pre></td></tr></table></figure>
<p>构造器函数方法使用方法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new RegExp(&quot;pattern&quot;[, &quot;flags&quot;])即new RegExp(&quot;模式&quot;[,&quot;标记&quot;])</div></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>pattern(模式) 表示正则表达式的文本</li>
<li>flags(标记) 如果指定此项，flags可以是下面值之一：</li>
<li>g: global match(全定匹配)</li>
<li>i: ignore case(忽略大小写)</li>
<li>gi: both global match and ignore case(匹配所有可能的值，也忽略大小写)<br>注意：文本格式中的参数不要使用引号标记，而构造器函数的参数则要使用引号标记。所以下面的表达式建立同样的正则表达式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/ab+c/i</div><div class="line">new RegExp(&quot;ab+c&quot;, &quot;i&quot;)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>描述：</p>
<p>当使用构造函数的时候，必须使用正常的字符串避开规则(在字符串中加入前导字符\ )是必须的。</p>
<p>例如，下面的两条语句是等价的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">re = new RegExp(&quot;\\w+&quot;)</div><div class="line">re = /\w+/</div></pre></td></tr></table></figure>
<p>下面的提供了在正则表达式中能够使用的完整对特殊字符的一个完整的列表和描述。</p>
<p>表1.3：正则表达式中的特殊字符：</p>
<p>字符\</p>
<p>意义：对于字符，通常表示按字面意义，指出接着的字符为特殊字符，\不作解释。</p>
<p>例如：/b/匹配字符’b’,通过在b 前面加一个反斜杠\，也就是/\b/，则该字符变成特殊字符，表示匹配一个单词的分界线。</p>
<p>或者：</p>
<p>对于几个字符，通常说明是特殊的，指出紧接着的字符不是特殊的，而应该按字面解释。</p>
<p>例如：<em>是一个特殊字符，匹配任意个字符(包括0个字符)；例如：/a</em>/意味匹配0个或多个a。</p>
<p>为了匹配字面上的<em>，在a前面加一个反斜杠；例如：/a\</em>/匹配’a*’。</p>
<p>字符^</p>
<p>意义：表示匹配的字符必须在最前边。</p>
<p>例如：/^A/不匹配”an A,”中的’A’，但匹配”An A.”中最前面的’A’。</p>
<p>字符$</p>
<p>意义：与^类似，匹配最末的字符。</p>
<p>例如：/t$/不匹配”eater”中的’t’，但匹配”eat”中的’t’。</p>
<p>字符*</p>
<p>意义：匹配*前面的字符0次或n次。</p>
<p>例如:/bo*/匹配”A ghost booooed”中的’boooo’或”A bird warbled”中的’b’，但不匹配”A goat grunted”中的任何字符。</p>
<p>字符+</p>
<p>意义：匹配+号前面的字符1次或n次。等价于{1,}。</p>
<p>例如：/a+/匹配”candy”中的’a’和”caaaaaaandy.”中的所有’a’。</p>
<p>字符?</p>
<p>意义：匹配?前面的字符0次或1次。</p>
<p>例如：/e?le?/匹配”angel”中的’el’和”angle.”中的’le’。</p>
<p>字符.</p>
<p>意义：(小数点)匹配除换行符外的所有单个的字符。</p>
<p>例如：/.n/匹配”nay, an apple is on the tree”中的’an’和’on’，但不匹配’nay’。</p>
<p>字符(x)</p>
<p>意义：匹配’x’并记录匹配的值。</p>
<p>例如：/(foo)/匹配和记录”foo bar.”中的’foo’。匹配子串能被结果数组中的素[1], …, [n] 返回，或被RegExp对象的属性$1, …, $9返回。</p>
<p>字符x|y</p>
<p>意义：匹配’x’或者’y’。</p>
<p>例如：/green|red/匹配”green apple”中的’green’和”red apple.”中的’red’。</p>
<p>字符{n}</p>
<p>意义：这里的n是一个正整数。匹配前面的n个字符。</p>
<p>例如：/a{2}/不匹配”candy,”中的’a’，但匹配”caandy,” 中的所有’a’和”caaandy.”中前面的两个<br>‘a’。</p>
<p>字符{n,}</p>
<p>意义：这里的n是一个正整数。匹配至少n个前面的字符。</p>
<p>例如：/a{2,}不匹配”candy”中的’a’，但匹配”caandy”中的所有’a’和”caaaaaaandy.”中的所有’a’</p>
<p>字符{n,m}</p>
<p>意义：这里的n和m都是正整数。匹配至少n个最多m个前面的字符。</p>
<p>例如：/a{1,3}/不匹配”cndy”中的任何字符，但匹配 “candy,”中的’a’，”caandy,” 中的前面两个<br>‘a’和”caaaaaaandy”中前面的三个’a’，注意：即使”caaaaaaandy” 中有很多个’a’，但只匹配前面的三个’a’即”aaa”。</p>
<p>字符[xyz]</p>
<p>意义：一字符列表，匹配列出中的任一字符。你可以通过连字符-指出一个字符范围。</p>
<p>例如：[abcd]跟[a-c]一样。它们匹配”brisket”中的’b’和”ache”中的’c’。</p>
<p>字符[^xyz]</p>
<p>意义：一字符补集，也就是说，它匹配除了列出的字符外的所有东西。 你可以使用连字符-指出一 字符范围。</p>
<p>例如：[^abc]和[^a-c]等价，它们最早匹配”brisket”中的’r’和”chop.”中的’h’。</p>
<p>字符[\b]</p>
<p>意义：匹配一个空格(不要与\b混淆)</p>
<p>字符\b</p>
<p>意义：匹配一个单词的分界线，比如一个空格(不要与[\b]混淆)</p>
<p>例如：/\bn\w/匹配”noonday”中的’no’，/\wy\b/匹配”possibly yesterday.”中的’ly’。</p>
<p>字符\B</p>
<p>意义：匹配一个单词的非分界线</p>
<p>例如：/\w\Bn/匹配”noonday”中的’on’，/y\B\w/匹配”possibly yesterday.”中的’ye’。</p>
<p>字符\cX</p>
<p>意义：这里的X是一个控制字符。匹配一个字符串的控制字符。</p>
<p>例如：/\cM/匹配一个字符串中的control-M。</p>
<p>字符\d</p>
<p>意义：匹配一个数字，等价于[0-9]。</p>
<p>例如：/\d/或/[0-9]/匹配”B2 is the suite number.”中的’2’。</p>
<p>字符\D</p>
<p>意义：匹配任何的非数字，等价于[^0-9]。</p>
<p>例如：/\D/或/[^0-9]/匹配”B2 is the suite number.”中的’B’。</p>
<p>字符\f</p>
<p>意义：匹配一个表单符</p>
<p>字符\n</p>
<p>意义：匹配一个换行符</p>
<p>字符\r</p>
<p>意义：匹配一个回车符</p>
<p>字符\s</p>
<p>意义：匹配一个单个white空格符，包括空格，tab，form feed，换行符，等价于[ \f\n\r\t\v]。</p>
<p>例如：/\s\w*/匹配”foo bar.”中的’ bar’。</p>
<p>字符\S</p>
<p>意义：匹配除white空格符以外的一个单个的字符，等价于[^ \f\n\r\t\v]。</p>
<p>例如：/\S/\w*匹配”foo bar.”中的’foo’。</p>
<p>字符\t</p>
<p>意义：匹配一个制表符</p>
<p>字符\v</p>
<p>意义：匹配一个顶头制表符</p>
<p>字符\w</p>
<p>意义：匹配所有的数字和字母以及下划线，等价于[A-Za-z0-9_]。</p>
<p>例如：/\w/匹配”apple,”中的’a’，”$5.28,”中的’5’和”3D.”中的’3’。</p>
<p>字符\W</p>
<p>意义：匹配除数字、字母外及下划线外的其它字符，等价于[^A-Za-z0-9_]。</p>
<p>例如：/\W/或者/[^$A-Za-z0-9_]/匹配”50%.”中的’%’。</p>
<p>字符\n</p>
<p>意义：这里的n是一个正整数。匹配一个正则表达式的最后一个子串的n的值(计数左圆括号)。</p>
<p>例如：/apple(,)\sorange\1/匹配”apple, orange, cherry, peach.”中的’apple, orange’，下面有一个更加完整的例子。</p>
<p>注意：如果左圆括号中的数字比\n指定的数字还小，则\n取下一行的八进制escape作为描述。</p>
<p>字符\ooctal和\xhex</p>
<p>意义：这里的\ooctal是一个八进制的escape值，而\xhex是一个十六进制的escape值，允许在一个正则表达式中嵌入ASCII码。</p>
<p>当表达式被检查的时候，文字符号提供了编辑正则表达式的方法。利用文字符号可以使到正则表达式保持为常数。例如，如果你在一个循环中使用文字符号来构造一个正则表达式，正则表达式不需进行反复编译。<br>正则表达式对象构造器，例如，new RegExp(“ab+c”)，提供正则表达式的运行时编译。当你知道正则表达式的模式会变化的时候，应该使用构造函数，或者你不知道正则表达式的模式，而它们是从另外的源获得的时候，比如由用户输入时。一旦你定义好了正则表达式，该正则表达式可在任何地方使用，并且可以改变，你可以使用编译方法来编译一个新的正则表达式以便重新使用。</p>
<p>一个分离预先定义的RegExp对象可以在每个窗口中使用；也就是说，每个分离的JavaScript线程运行以获得自己的RegExp对象。因为每个脚本在一个线程中是不可中断的，这就确保了不同的脚本不会覆盖RegExp对象的值。<br>预定义的RegExp对象包含的静态属性：input, multiline, lastMatch,lastParen, leftContext, rightContext, 以及从$1到$9。input和multiline属性能被预设。其它静态属性的值是在执行个别正则表达式对象的exec和test方法后，且在执行字符串的match和replace方法后设置的。</p>
<p>属性</p>
<p>注意RegExp对象的几个属性既有长名字又有短名字(象Perl)。这些名字都是指向相同的值。Perl是<br>一种编程语言，而JavaScript模仿了它的正则表达式。</p>
<p>属性$1, …, $9</p>
<p>取得匹配的子串，如果有的话</p>
<p>属性$_</p>
<p>参考input<br>属性$*<br>参考multiline<br>属性$&amp;<br>参考lastMatch<br>属性$+<br>参考lastParen<br>属性$`<br>参考leftContext<br>属性$’<br>参考rightContext<br>属性constructor<br>指定用来建立对象原型函<br>属性global<br>决定是否测试正则表达式是否不能匹配所有的字符串，或者只是与最先的冲突。<br>属性ignoreCase<br>决定试图匹配字符串的时候是否忽略大小写<br>属性input<br>当正则表达式被匹配的时候，为相反的字符串。<br>属性lastIndex<br>决定下一次匹配从那里开始<br>属性lastMatch<br>最后一个匹配的字符<br>属性lastParen<br>子串匹配的时候，最后一个parenthesized，如果有的话。<br>属性leftContext<br>最近一次匹配前的子串。<br>属性multiline<br>是否在串的多行中搜索。<br>属性prototype<br>允许附加属性到所有的对象<br>属性rightContext<br>最近一次匹配后的的子串。<br>属性source<br>模式文本<br>方法<br>compile方法<br>编译一个正则表达式对象<br>exec方法<br>运行正则表达式匹配<br>test方法<br>测试正则达式匹配<br>toSource方法<br>返回一个对象的文字描述指定的对象；你可以使用这个值来建立一个新的对象。不考虑Object.toS<br>ource方法。<br>toString方法<br>返回一个字符串描述指定的对象，不考虑Object.toString对象。<br>valueOf方法<br>返回指定对角的原始值。不考虑Object.valueOf方法。<br>另外，这个对象继承了对象的watch和unwatch方法</p>
<p>例子：<br>例１、下述示例脚本使用replace方法来转换串中的单词。在替换的文本中，脚本使用全局 RegExp对象的$1和$2属性的值。注意，在作为第二个参数传递给replace方法的时候，RegExp对象的$属性的名称。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT LANGUAGE=&quot;JavaScript1.2&quot;&gt;</div><div class="line">re = /(\w+)\s(\w+)/;</div><div class="line">str = &quot;John Smith&quot;;</div><div class="line">newstr=str.replace(re,&quot;$2, $1&quot;);</div><div class="line">document.write(newstr)</div><div class="line">&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure>
<p>显示结果：”Smith, John”.<br>例２、下述示例脚本中，RegExp.input由Change事件处理句柄设置。在getInfo函数中，exec 方法<br>使用RegExp.input的值作为它的参数，注意RegExp预置了$属性。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT LANGUAGE=&quot;JavaScript1.2&quot;&gt;</div><div class="line">function getInfo(abc) &#123;</div><div class="line">  re = /(\w+)\s(\d+)/;</div><div class="line">  re.exec(abc.value);</div><div class="line">  window.alert(RegExp.$1 + &quot;, your age is &quot; + RegExp.$2);</div><div class="line">&#125;</div><div class="line">&lt;/SCRIPT&gt;</div><div class="line">请输入你的姓和年龄，输入完后按回车键。</div><div class="line">&lt;FORM&gt;</div><div class="line">  &lt;INPUT TYPE=&quot;TEXT&quot; NAME=&quot;NameAge&quot; onChange=&quot;getInfo(this);&quot;&gt;</div><div class="line">&lt;/FORM&gt;</div></pre></td></tr></table></figure>
<p>$1, …, $9属性</p>
<p>用圆括号括着的匹配子串，如果有的话。</p>
<p>是RegExp的属性</p>
<p>静态，只读</p>
<p>在JavaScript 1.2, NES 3.0以上版本提供</p>
<p>描述：因为input是静态属性，不是个别正则表达式对象的属性。你可以使用RegExp.input 访问该属性。</p>
<p>能加上圆括号的子串的数量不受限制，但正则表达式对象只能保留最后9 条。如果你要访问所有的圆括号内的匹配字串，你可以使用返回的数组。</p>
<p>这些属性能用在RegExp.replace方法替换后的字符串(输出结果)。当使用这种方式的时候，不用预 先考虑RegExp对象。下面给出例子。当正则表达式中没有包含圆括号的时候，该脚本解释成$n的字面意义。(这里的n是一个正整数)。</p>
<p>例如：</p>
<p>下例脚本使用replace 方法来交换串中单词的位置。在替换后的文本字串中，脚本使用正则表达式<br>RegExp对象的$1和$2属性的值。注意：当它们向replace方法传递参数的时候，这里没有考虑 $ 属性的<br>RegExp对象的名称。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT LANGUAGE=&quot;JavaScript1.2&quot;&gt;</div><div class="line">  re = /(\w+)\s(\w+)/;</div><div class="line">  str = &quot;John Smith&quot;;</div><div class="line">  newstr = str.replace(re,&quot;$2, $1&quot;);</div><div class="line">  document.write(newstr)</div><div class="line">&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure>
<p>显示的输出结果为：Smith, John。</p>
<p>正则表达式regular expression详述(二)</p>
<p>正则表达式详述（二）</p>
<p>以下这些不是正则表达式的新增对象请参阅对应的JavaScript对象的属性 $_属性 参考input $*属性<br>参考multiline $&amp;属性 参考lastMatch $+属性 参考lastParen $`属性<br>参考leftContext $’属性 参考rightContext compile方法 在脚本运行期间编译正则表达式对象<br>属于RegExp的方法 在JavaScript 1.2, NES 3.0以上版本提供 语法：<br>regexp.compile(pattern[, flags]) 以数： regexp 正则表达式的名称，可以是变量名或文字串。<br>pattern 正则表达式的定义文本。 flags 如果指定的话，可以是下面其中的一个： “g”: 匹配所有可能的字串<br>“i”: 忽略大小写 “gi”: 匹配所有可能的字串及忽略大小写 描述：<br>使用compile方法来编译一个正则表达式 created with the RegExp constructor function。这样<br>就强制正则表达式只编译一次，而不是每次遇到正则表达式的时候都编译一次。当你确认正则表达式能<br>保持不变的时候可使用compile 方法来编译它(在获得它的匹配模式后)，这样就可以在脚本中重复多次使用它。<br>你亦可以使用compile 方法来改变在运行期间改变正则表达式。例如，假如正则表达式发生变化，<br>你可以使用compile方法来重新编译该对象来提高使用效率。<br>使用该方法将改变正则表达式的source, global和ignoreCasesource属性的值。 constructor<br>指出建立对象原型的function。注意这个属性的值由函数本身提供，而不是一个字串包含RegExp的name.Property提供。<br>在JavaScript 1.1, NES 2.0以上版本提供 ECMA版本ECMA-262 描述：参考Object.constructor.<br>exec方法 在指定的字符串运行匹配搜索。返回一个结果数组。 是RegExp的方法<br>在JavaScript 1.2, NES 3.0以上版本提供 语法： regexp.exec([str])regexp([str])<br>参数： regexp，正则表达式的名称，可以是一个变量名或文字定义串。<br>str，要匹配正则表达式的字符串，如果省略，将使用RegExp.input的值。<br>描述：就如在语法描述中的一样，正则表达工的exec方法能够被直接调用(使用regexp.exec(str))或者间接调用(使用regexp(str))。<br>假如你只是运行以找出是否匹配，可以使用String搜索方法。<br>假如匹配成功，exec方法返回一个数组并且更新正则表达式对象属性的值和预先定义的正则表达式对象、RegExp。如果匹配失败，exec方法返回null。<br>请看下例： <script language="JavaScript1.2"> //匹配一个b接着一个或多个d，再接着一个b<br>//忽略大小写 myRe=/d(b+)(d)/ig; myArray = myRe.exec(“cdbBdbsbz”);<br></script> 下面是该脚本的返回值：对象 属性/Index 描述 例子<br>myArray<br>myArray的内容 [“dbBd”, “bB”, “d”]<br>index<br>基于0的匹配index 1<br>input<br>原始字符串 cdbBdbsbz<br>[0]<br>最后匹配的字符 dbBd<br>[1], …[n]<br>用圆括号括住的匹配字符串，如果有的话。不限制括号的个数。 [1] = bB<br>[2] = d<br>myRe<br>lastIndex<br>开始下次匹配操作的index值 5<br>ignoreCase<br>指出”i”是否使用以忽略大小写 true<br>global<br>指出是否使用”g”标记来进行匹配所有可能的字串 true<br>source<br>定义模式的文本字符串 d(b+)(d)<br>RegExp<br>lastMatch$&amp;<br>最后匹配的字符 dbBd<br>leftContext$\Q<br>最新匹配前面的子串 c<br>rightContext$’<br>最新匹配后面的子串 bsbz<br>$1, …$9<br>圆括号内的匹配子串，如果有的话。圆括号的个数不受限制，但RegExp只能保留最后9个 $1 = bB<br>$2 = d<br>lastParen $+<br>最后一个加上圆括号的匹配子串，如果有的话 d<br>假如你的正则表达式使用了”g”标记，你可以多次使用exec 方法来连续匹配相同的串。当你这样做的时候，新的匹配将从由正则表达式的lastIndex 属性值确定的子串中开始。例如，假定你使用下面的脚本：</p>
<p><script language="JavaScript1.2"> myRe=/ab*/g;str = “abbcdefabh”<br>myArray = myRe.exec(str);<br>document.writeln(“Found “+myArray[0]+”. Next match starts at “+myRe.lastIndex)<br>mySecondArray = myRe.exec(str);<br>document.writeln(“Found “+mySecondArray[0]+”. Next match starts at “+myRe.lastIndex)<br></script><br>这个脚本显示如下结果： Found abb. Next match starts at 3<br>Found ab. Next match starts at 9 例子：<br>在下面的例子中，用户输入一个名字，脚本根据输入执行匹配操作。接着检查数组看是否和其它用户的名字匹配。<br>本脚本假定已注册的用户的姓已经存进了数组A中，或许从一个数据库中取得。</p>
<p><html></html></p>
<p><script language="JavaScript1.2"> A = [“zhao”,”qian”,”sun”,”li”,”liang”]<br>function lookup() { firstName = /\w+/i(); if (!firstName)<br>window.alert (RegExp.input + “非法输入”); else { count=0;<br>for (i=0;i 输入你的姓然后按回车键。</p>
<p><FORM><INPUT TYPE:"TEXT" NAME="FirstName" onChange="lookup(this);"></FORM><br></HTML><br>global属性 正则表达式中是否使用了”g”标记。 RegExp属性，只读<br>在JavaScript 1.2, NES 3.0以上版本提供 描述： global是一个个别正则表达式对象的属性<br>如果使用了”g”标记，global的值为true；否则为 false。”g”标记指定正则表达式测试所有可能的匹配。<br>你不能直接改变该属性的值，但可以调用compile方法来改变它。 ignoreCase 检查正则表达式是否使用了”i”标记<br>RegExp属性，只读 在JavaScript 1.2, NES 3.0以上版本提供 描述：<br>ignoreCase是个别正则表达式对象的一个属性。<br>如果使用了”i”标记，则返回true，否则返回false。”i”标记指示在进行匹配的时候忽略大小写。<br>你不能直接改变该属性的值，但可以通过调用compile方法来改变它 input 指出正则表达式要测试那个字串。$_是这个属性的另一个名字。<br>RegExp的属性，静态 在JavaScript 1.2, NES 3.0以上版本提供<br>描述：因为input是静态的，不是某个个别的正则表达式对象的属性。你也可以使用 RegExp.input来表示。<br>如果没有给正则表达式的exec或test方法提供字符串，并且RegExp.input中有值，则使用它的值来调用该方法。<br>脚本或浏览器能够预置input属性。如果被预置了值且调用exec或 test方法的时候没有提供字符串<br>则调用exec或test的时候使用input的值。input可以被浏览器以下面的方式设置：<br>当text表单域处理句柄被调用的时候，input被设置为该text输入的字串。<br>当textarea表单域处理句柄被调用的时候，input被设置为textarea域内输入的字串。注意multili<br>ne亦被设置成true从而能匹配多行文本。 当select表单域处理句柄被调用的时候，input被设置成selected text的值。<br>当链接对象的处理句柄被调用的时候，input被设置成<A HREF=...>和</A>之间的字符串。<br>事件理现句柄处理完毕后，input属性的值被清除。 lastIndex 可读/可写的一个整数属性，指出下一次匹配从哪里开始。<br>RegExp的属性 在JavaScript 1.2, NES 3.0以上版本提供<br>描述：lastIndex 是个别的正则表达式对象的属性。 这个属性只有当正则表达式的”g”标记被使用以进行全串匹配的时候才被设置。实行以下规则：<br>如果lastIndex大小字符串的长度，regexp.test和regexp.exec失败，且lastIndex被设为0。<br>如果lastIndex等于字串的长度且正则表达式匹配空字符串，则正则表达式从lastIndex的位置开始匹配。<br>如果lastIndex等于字符串的长度且正则表达式不匹配空字符串，则正则表达式不匹配input，且lastIndex被置为0。<br>否则，lastIndex被设置成最近一次匹配的下一点。 例如，按下面的顺序执行脚本： re = /(hi)?/g 匹配空字符串<br>re(“hi”) 返回[“hi”, “hi”]，lastIndex置为2<br>re(“hi”) 返回[“”]，一个空数组，它的下标为0的元素就是匹配字符串。在这种情况下，返回空<br>串是因为lastIndex等于2(且仍然是2)，并且”hi”的长度也是2。 lastMatch 最后一次匹配字符串，$&amp;是同样的意思。<br>RegExp的属性，静态，只读 在JavaScript 1.2, NES 3.0以上版本提供<br>描述：因为lastMatch是静态的，所以它不是个别指定正则表达式的属性。你也可以使用RegExp.lastMatch。 lastParen<br>最后一次加上括号的匹配字符串，如果有的话。$+是同样的意思。 RegExp属性，静态，只读<br>在JavaScript 1.2, NES 3.0以上版本提供<br>描述：因为lastParen是静态的，它不是某个个别正则式的属性，你可以使用RegExp.lastParen 表达同样的意思。<br>leftContext 最近一次匹配前面的子串，$`具有相同的意思。 RegExp的属性，静态，只读<br>在JavaScript 1.2, NES 3.0以上版本提供<br>描述：因为leftContext是静态的，不是某一个正则表达式的属性，所以可以使用RegExp.leftContext来表达想同的意思。<br>multiline 反映是否匹配多行文本，$*是相同的意思。 RegExp的属性，静态<br>在JavaScript 1.2, NES 3.0以上版本提供<br>描述：因为multiline是静态的，而不是某个个别正则表达式的属性，所以能够用RegExp.multiline表达相同的意思。<br>如果允许匹配多行文本，则multiline为true，如果搜索必须在换行时停止，则为false。<br>脚本或浏览器能够设置multiline属性。当一个textarea的事件处理句柄被调用的时候，multiline<br>被置为true。在事件处理句柄处理完毕后，multiline属性值被清除。也就是说，如果你设置了multiline为true，则执行任何的事件处理句柄后，multiline被置为false。 prototype<br>描绘类的原型。你可以根据要求使用prototype来增加类的属性或方法。为了获得prototypes 的资料，请参阅RegExp的Function.prototype.Property属性。 从JavaScript 1.1, NES 2.0版本开始提供<br>ECMA版本ECMA-262 rightContext 最后一次匹配的右边的字符串，$’是同样的效果。<br>RegExp的属性，静态，只读 从 JavaScript 1.2, NES 3.0以上版本开始提供<br>描述：因为rightContext是静态的，不是某个个别正则表达工的属性，可以使用RegExp.rightContext来达到相同的效果。<br>source 一个只读属性，包含正则表达式定义的模式，不包侨forward slashes和”g”或”i”标记。 RegExp的属性，只读<br>从JavaScript 1.2, NES 3.0以上版本开始提供<br>描述：source是个别正则表达式对象的属性，你不能直接改变它的值，但可以通过调用compile 方法来改变它。 test<br>执行指定字符串的正则表达式匹配搜索，返回true或false。 RegExp的方法<br>从JavaScript 1.2, NES 3.0以上版本开始提供 语法：regexp.test([str])<br>参数：regexp，正则表达式的名称，可以是变量名或正则表达式定义文字串<br>str，要匹配的字符串，如果省略，将使用RegExp.input的值为作参数<br>描述：当你需要知道一个字符串能否匹配某个正则表达工，可以使用test方法(与String.search方<br>法类似)； 为了获得更多的信息(但速度将变慢)，可以使用exec方法(与String.match方法类似)。 例子：下面的例子显示test是否成功的提示：<br>function testinput(re, str){<br>if (re.test(str)) midstring = “ contains “;<br>else midstring = “ does not contain “;<br>document.write (str + midstring + re.source); } toSource<br>返回一个字符串象征对象的源码 RegExp的方法 从JavaScript 1.3以上版本开始提供 语法：toSource()<br>参数：没有 描述：toSource方法返回下述的值： 对于内置的RegExp对象，toSource返回下面的字符象征源码不可用：<br>function Boolean(){ [native code] }<br>在RegExp场合中, toSource返回象征源码的字符串，通常这个方法是由JavaScript内部自动调用而不是不代码中显式调用。<br>更多请看Object.toSource toString 返回描绘指定对象的字符串。 RegExp的方法<br>从JavaScript 1.1, NES 2.0开始提供 ECMA版本ECMA-262 语法：toString() 参数：无<br>描述：RegExp对象不考虑Object对象的toString方法；它不继承Object.toString，对于RegExp 对<br>象，toString方法返回一个代表该对象的字符串。 例如：下面的例子显示象征RegExp对象的字符串<br>myExp = new RegExp(“a+b+c”); alert(myExp.toString())<br>displays “/a+b+c/“ 更多请看：Object.toString valueOf 返回一个RegExp对象的原始值<br>RegExp的方法 从JavaScript 1.1版本开始提供 ECMA版本：ECMA-262 语法：valueOf()<br>参数：无 描述：RegExp的valueOf方法以字符串形式返回RegExp对象的原始值，这个值与RegExp.toString相等。<br>该方法通常由JavaScript内部自动调用而不是显式调用 例子： myExp = new RegExp(“a+b+c”);<br>alert(myExp.valueOf()) displays “/a+b+c/“</p>
<p>正则表达式在javascript中的几个实例1(转)</p>
<p>! 去除字符串两端空格的处理</p>
<p>如果采用传统的方式,就要可能就要采用下面的方式了</p>
<p>代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">// 清除左边空格</div><div class="line">function js_ltrim(deststr) &#123;</div><div class="line">	if (deststr == null)</div><div class="line">		return &quot;&quot;;</div><div class="line">	var pos = 0;</div><div class="line">	var retStr = new String(deststr);</div><div class="line">	if (retStr.lenght == 0)</div><div class="line">		return retStr;</div><div class="line">	while (retStr.substring(pos, pos + 1) == &quot; &quot;)</div><div class="line">		pos++;</div><div class="line">	retStr = retStr.substring(pos);</div><div class="line">	return (retStr);</div><div class="line">&#125;</div><div class="line">// 清除右边空格</div><div class="line">function js_rtrim(deststr) &#123;</div><div class="line">	if (deststr == null)</div><div class="line">		return &quot;&quot;;</div><div class="line">	var retStr = new String(deststr);</div><div class="line">	var pos = retStr.length;</div><div class="line">	if (pos == 0)</div><div class="line">		return retStr;</div><div class="line">	while (pos &amp;&amp; retStr.substring(pos - 1, pos) == &quot; &quot;)</div><div class="line">		pos--;</div><div class="line">	retStr = retStr.substring(0, pos);</div><div class="line">	return (retStr);</div><div class="line">&#125;</div><div class="line">// 清除左边和右边空格</div><div class="line">function js_trim(deststr) &#123;</div><div class="line">	if (deststr == null)</div><div class="line">		return &quot;&quot;;</div><div class="line">	var retStr = new String(deststr);</div><div class="line">	var pos = retStr.length;</div><div class="line">	if (pos == 0)</div><div class="line">		return retStr;</div><div class="line">	retStr = js_ltrim(retStr);</div><div class="line">	retStr = js_rtrim(retStr);</div><div class="line">	return retStr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>采用正则表达式,来去除两边的空格,只需以下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String.prototype.trim = function() &#123;</div><div class="line">  return this.replace(/(^\s*)|(\s*$)/g, &quot;&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一句就搞定了,</p>
<p>可见正则表达式为我们节省了相当的编写代码量</p>
<p>! 移动手机号的校验</p>
<p>如果采用传统的校验方式至少就要完成下面三步的校验,</p>
<p>(1). 是否是数字</p>
<p>(2).是否是11位</p>
<p>(3).数字的第三位是否是5,6,7,8,9</p>
<p>如果采用正则表达式校验,只需以下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function checkMobile1(form) &#123;</div><div class="line">	if (form.mobile.value &gt; &quot;&quot;) &#123;</div><div class="line">		var reg = /13[5,6,7,8,9]\d&#123;8&#125;/;</div><div class="line">		if (form.mobile.value.match(reg) == null) &#123;</div><div class="line">			alert(&quot;请输入正确的移动手机号码！&quot;);</div><div class="line">			form.mobile.focus();</div><div class="line">			return false;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从上面的代码可以看出校验移动手机号只需定义一个<code>var reg=/13[5,6,7,8,9]\d{8}/;</code>模式匹配串就可以完成合法性校验了<br>! URL的校验,<br>条件:必须以http:// 或 https:// 开头, 端口号必须为在1－65535 之间, 以下代码完成了合法性校验<br>复制代码 代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">// obj:数据对象</div><div class="line">// dispStr :失败提示内容显示字符串</div><div class="line">function checkUrlValid(obj, dispStr) &#123;</div><div class="line">	if (obj == null) &#123;</div><div class="line">		alert(&quot;传入对象为空&quot;);</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">	var str = obj.value;</div><div class="line">	var urlpatern0 = /^https?:\/\/.+$/i;</div><div class="line">	if (!urlpatern0.test(str)) &#123;</div><div class="line">		alert(dispStr + &quot;不合法：必须以&apos;http:\/\/&apos;或&apos;https:\/\/&apos;开头!&quot;);</div><div class="line">		obj.focus();</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">	var urlpatern2 = /^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?.+$/i;</div><div class="line">	if (!urlpatern2.test(str)) &#123;</div><div class="line">		alert(dispStr + &quot;端口号必须为数字且应在1－65535之间!&quot;);</div><div class="line">		obj.focus();</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	var urlpatern1 = /^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?(\/((\.)?(\?)?=?&amp;?[a-zA-Z0-9_-](\?)?)*)*$/i;</div><div class="line">	if (!urlpatern1.test(str)) &#123;</div><div class="line">		alert(dispStr + &quot;不合法,请检查!&quot;);</div><div class="line">		obj.focus();</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">	var s = &quot;0&quot;;</div><div class="line">	var t = 0;</div><div class="line">	var re = new RegExp(&quot;:\\d+&quot;, &quot;ig&quot;);</div><div class="line">	while ((arr = re.exec(str)) != null) &#123;</div><div class="line">		s = str.substring(RegExp.index + 1, RegExp.lastIndex);</div><div class="line">		if (s.substring(0, 1) == &quot;0&quot;) &#123;</div><div class="line">			alert(dispStr + &quot;端口号不能以0开头!&quot;);</div><div class="line">			obj.focus();</div><div class="line">			return false;</div><div class="line">		&#125;</div><div class="line">		t = parseInt(s);</div><div class="line">		if (t &lt; 1 || t &gt; 65535) &#123;</div><div class="line">			alert(dispStr + &quot;端口号必须为数字且应在1－65535之间!&quot;);</div><div class="line">			obj.focus();</div><div class="line">			return false;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>对url的校验,看上去有很多的代码,这是因为要给予出错提示, 否则只需</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var urlpatern1 =/^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?(\/((\.)?(\?)?=?&amp;?[a-zA-Z0-9_-](\?)?)*)*$/i;</div></pre></td></tr></table></figure>
<p>一句就可以校验出url合法性了</p>
<p>正则表达式在JavaScript应用</p>
<hr>
<p>去掉字符串头尾多余的空格</p>
<p>/g是全文查找所有匹配</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function String.prototype.Trim()&#123;return this.replace(/(^\s*)|(\s*$)/g, &quot;&quot;);&#125;</div><div class="line">function String.prototype.LTrim()&#123;return this.replace(/(^\s*)/g, &quot;&quot;);&#125;</div><div class="line">function String.prototype.RTrim()&#123;return this.replace(/(\s*$)/g, &quot;&quot;);&#125;</div></pre></td></tr></table></figure>
<hr>
<p>应用：计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">String.prototype.len=function()&#123;return this.replace([^\x00-\xff]/g,&quot;aa&quot;).length;&#125;</div><div class="line">``</div><div class="line"></div><div class="line">--------------------------------------------------------------</div><div class="line">应用：javascript中没有像vbscript那样的trim函数，我们就可以利用这个表达式来实现，如下：</div></pre></td></tr></table></figure>
<p>String.prototype.trim = function() {<br>return this.replace(/(^\s<em>)|(\s</em>$)/g, “”);<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">得用正则表达式从URL地址中提取文件名的javascript程序，如下结果为page1</div></pre></td></tr></table></figure></p>
<p>s=”<a href="http://www.jb51.net/page1.htm">http://www.jb51.net/page1.htm</a>“<br>s=s.replace(/(.<em>\/){0,}([^.]+).</em>/ig,”$2”)<br>alert(s)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">##利用正则表达式限制网页表单里的文本框输入内容：</div><div class="line">--------------------------------------------------------------</div><div class="line">用正则表达式限制只能输入中文：`onkeyup=&quot;value=value.replace(/[^\u4E00-\u9FA5]/g,&apos;)&quot; onbeforepaste=&quot;clipboardData.setData(&apos;text&apos;,clipboardData.getData(&apos;text&apos;).replace(/[^\u4E00-\u9FA5]/g,&apos;))&quot;`</div><div class="line">--------------------------------------------------------------</div><div class="line">用正则表达式限制只能输入全角字符： `onkeyup=&quot;value=value.replace(/[^\uFF00-\uFFFF]/g,&apos;)&quot; onbeforepaste=&quot;clipboardData.setData(&apos;text&apos;,clipboardData.getData(&apos;text&apos;).replace(/[^\uFF00-\uFFFF]/g,&apos;))&quot;`</div><div class="line">--------------------------------------------------------------</div><div class="line">用正则表达式限制只能输入数字：`onkeyup=&quot;value=value.replace(/[^\d]/g,&apos;) &quot;onbeforepaste=&quot;clipboardData.setData(&apos;text&apos;,clipboardData.getData(&apos;text&apos;).replace(/[^\d]/g,&apos;))&quot;`</div><div class="line">--------------------------------------------------------------</div><div class="line">用正则表达式限制只能输入数字和英文：`onkeyup=&quot;value=value.replace(/[\W]/g,&apos;) &quot;onbeforepaste=&quot;clipboardData.setData(&apos;text&apos;,clipboardData.getData(&apos;text&apos;).replace(/[^\d]/g,&apos;))&quot; `</div><div class="line"></div><div class="line">用正则表达式和javascript对表单进行全面验证</div><div class="line"></div><div class="line">使用时请将下面的javascript代码存到一个单一的js文件中。</div><div class="line"></div><div class="line">1、表单要求</div></pre></td></tr></table></figure></p>
<p><form name="formname" onSubmit="return validateForm(this)"></form><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">将对表单中的所有以下类型的域依次验证，所有验证是去除了前导和后缀空格的，要注意是区分大小写的。</div><div class="line"></div><div class="line">2、空值验证</div><div class="line"></div><div class="line">表单中任意域加上emptyInfo属性将对此域是否为空进行验证（可以和最大长度验证\一般验证方式同时使用）。</div><div class="line"></div><div class="line">无此属性视为此域允许空值。</div><div class="line"></div><div class="line">如：`&lt;input type=&quot;text&quot; name=&quot;fieldNamename&quot; emptyInfo=&quot;字段不能为空！&quot;&gt;`</div><div class="line"></div><div class="line">3、最大长度验证（可以和空值验证、一般验证方式同时使用）：</div><div class="line"></div><div class="line">`&lt;input type=&quot;text&quot; name=&quot;fieldNamename&quot; maxlength=&quot;20&quot; lengthInfo=&quot;最大长度不能超过20！&quot;&gt; `</div><div class="line">或,`&lt;textarea maxlength=&quot;2000&quot; lengthInfo=&quot;最大长度不能超过2000！&quot;&gt;`</div><div class="line"></div><div class="line">3、一般验证方式(不对空值做验证）:</div><div class="line"></div><div class="line">如：`&lt;input type=&quot;text&quot; validator=&quot;^(19|20)[0-9]&#123;2&#125;$&quot; errorInfo=&quot;不正确的年份!&quot; &gt;`</div><div class="line"></div><div class="line">4、标准验证(不与其它验证方式同时使用）：</div><div class="line"></div><div class="line">全部通过`&lt;input type=&quot;hidden&quot;&gt;`来实现，并且不需要name属性以免提交到服务器。</div><div class="line"></div><div class="line">4.1、合法日期验证：</div></pre></td></tr></table></figure></p>
<p><input type="text" name="yearfieldName" value="2004">注：这里也可以是<select name="yearfieldName"></select>，以下同</p>
<p><input type="text" name="monthfieldName" value="02"></p>
<p><input type="text" name="dayfieldName" value="03"></p>
<p><input type="hidden" validatorType="DateGroup" year="yearfieldName" month="monthfieldName" day="dayfieldName" errorInfo="不正确的日期!"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">yearfieldName、monthfieldName、dayfieldName分别为年月日字段，月和日可以是两位(MM)或一位格式(M)，</div><div class="line">此处不对每个字段分别检验(如果要检验，请在年月日三个域分别使用前面的一般验证方式），只对日期的最大值是否合法检查;</div><div class="line"></div><div class="line">4.2、日期格式验证(请注意，此验证不对日期是否有效进行验证，还未找到从格式中得到年月日数据的方法^_^)：</div></pre></td></tr></table></figure></p>
<p><input type="text" name="datefieldName" value="2003-01-03 21:31:00"></p>
<p><input type="hidden" validatorType="Date" fieldName="datefieldName"; format="yyyy-MM-dd HH:mm:ss" errorInfo="不正确的日期!"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">其中格式仅对y、M、d、H、m、s进行支持(其它字符视为非时间的字符)</div><div class="line"></div><div class="line">4.3、列表验证：</div><div class="line"></div><div class="line">检验列表(checkbox、redio、select)是否至少选中了一条记录(对select主要用于多项选择)</div></pre></td></tr></table></figure></p>
<p><input type="checkbox" name="checkbox1"></p>
<p><input type="hidden" validatorType="Checkbox" fieldName="checkbox1" errorInfo="请至少选中一条记录!"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">其中validatorType可以是Checkbox、R、Select;</div><div class="line"></div><div class="line">对于一个select表单，如果要求选择一条不能是第一条的记录，请用下列方式:</div></pre></td></tr></table></figure></p>
<p><select name="select1" emptyInfo="请选择一个选项!"></p>
<p><option value="">==请选择==</option></p>
<p><option value="1">1</option></p>
<p><select><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">4.4、Email验证：</div></pre></td></tr></table></figure></p>
<p><input type="text" name="email"></p>
<p><input type="hidden" fieldName="email" validatorType="Email" separator="," errorInfo="不正确的Email!"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">其中separator为可选项，表示输入多个email时的分隔符(无此选项只能是一个地址）</div><div class="line"></div><div class="line">4.5、加入其它javascript操作：</div></pre></td></tr></table></figure></p>
<p><script type="text/javascript"><br>function functionname(){<br>  // code here<br>}<br></script><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">表单中加入`&lt;input type=&quot;hidden&quot; validatorType=&quot;javascript&quot; functionName=&quot;functionname&quot;&gt;`（此时emptyInfo等属性无效）</div><div class="line">时将调用function属性中指定的javascript方法（要求方法返回true或false，返回false将不再验证表单，也不提交表单)。</div><div class="line"></div><div class="line">5、在表单通过验证提交前disable一个按钮（也可将其它域disable,不能与其它验证同在一个域)，不要求按钮是表单中的最后一个</div></pre></td></tr></table></figure></p>
<p><input type="button" name="提交" validatortype="disable"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">6、不验证表单</div></pre></td></tr></table></figure></p>
<p><input type="hidden" name="validate" value="0" functionname="functionname"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">当validator域值为0时不对表单进行验证，直接提交表单或执行指定function并返回true后提交表单</div><div class="line"></div><div class="line">functionName为可选</div><div class="line"></div><div class="line">代码如下:</div></pre></td></tr></table></figure></p>
<p>function getStringLength(str) {<br>    var endvalue = 0;<br>    var sourcestr = new String(str);<br>    var tempstr;<br>    for (var strposition = 0; strposition &lt; sourcestr.length; strposition++) {<br>        tempstr = sourcestr.charAt(strposition);<br>        if (tempstr.charCodeAt(0) &gt; 255 || tempstr.charCodeAt(0) &lt; 0) {<br>            endvalue = endvalue + 2;<br>        } else {<br>            endvalue = endvalue + 1;<br>        }<br>    }<br>    return (endvalue);<br>}<br>function trim(str) {<br>    if (str == null)<br>        return “”;<br>    if (str.length == 0)<br>        return “”;<br>    var i = 0, j = str.length - 1, c;<br>    for (; i &lt; str.length; i++) {<br>        c = str.charAt(i);<br>        if (c != ‘ ‘)<br>            break;<br>    }<br>    for (; j &gt; -1; j–) {<br>        c = str.charAt(j);<br>        if (c != ‘ ‘)<br>            break;<br>    }<br>    if (i &gt; j)<br>        return “”;<br>    return str.substring(i, j + 1);<br>}<br>function validateDate(date, format, alt) {<br>    var time = trim(date.value);<br>    if (time == “”)<br>        return;<br>    var reg = format;<br>    var reg = reg.replace(/yyyy/, “[0-9]{4}”);<br>    var reg = reg.replace(/yy/, “[0-9]{2}”);<br>    var reg = reg.replace(/MM/, “((0[1-9])|1[0-2])”);<br>    var reg = reg.replace(/M/, “(([1-9])|1[0-2])”);<br>    var reg = reg.replace(/dd/, “((0[1-9])|([1-2][0-9])|30|31)”);<br>    var reg = reg.replace(/d/, “([1-9]|[1-2][0-9]|30|31))”);<br>    var reg = reg.replace(/HH/, “(([0-1][0-9])|20|21|22|23)”);<br>    var reg = reg.replace(/H/, “([0-9]|1[0-9]|20|21|22|23)”);<br>    var reg = reg.replace(/mm/, “([0-5][0-9])”);<br>    var reg = reg.replace(/m/, “([0-9]|([1-5][0-9]))”);<br>    var reg = reg.replace(/ss/, “([0-5][0-9])”);<br>    var reg = reg.replace(/s/, “([0-9]|([1-5][0-9]))”);<br>    reg = new RegExp(“^” + reg + “$”);<br>    if (reg.test(time) == false) {// 验证格式是否合法<br>        alert(alt);<br>        date.focus();<br>        return false;<br>    }<br>    return true;<br>}<br>function validateDateGroup(year, month, day, alt) {<br>    var array = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);<br>    var y = parseInt(year.value);<br>    var m = parseInt(month.value);<br>    var d = parseInt(day.value);<br>    var maxday = array[m - 1];<br>    if (m == 2) {<br>        if ((y % 4 == 0 &amp;&amp; y % 100 != 0) || y % 400 == 0) {<br>            maxday = 29;<br>        }<br>    }<br>    if (d &gt; maxday) {<br>        alert(alt);<br>        return false;<br>    }<br>    return true;<br>}<br>function validateCheckbox(obj, alt) {<br>    var rs = false;<br>    if (obj != null) {<br>        if (obj.length == null) {<br>            return obj.checked;<br>        }<br>        for (i = 0; i &lt; obj.length; i++) {<br>            if (obj[i].checked == true) {<br>                return true;<br>            }<br>        }<br>    }<br>    alert(alt);<br>    return rs;<br>}<br>function validateRadio(obj, alt) {<br>    var rs = false;<br>    if (obj != null) {<br>        if (obj.length == null) {<br>            return obj.checked;<br>        }<br>        for (i = 0; i &lt; obj.length; i++) {<br>            if (obj[i].checked == true) {<br>                return true;<br>            }<br>        }<br>    }<br>    alert(alt);<br>    return rs;<br>}<br>function validateSelect(obj, alt) {<br>    var rs = false;<br>    if (obj != null) {<br>        for (i = 0; i &lt; obj.options.length; i++) {<br>            if (obj.options[i].selected == true) {<br>                return true;<br>            }<br>        }<br>    }<br>    alert(alt);<br>    return rs;<br>}<br>function validateEmail(email, alt, separator) {<br>    var mail = trim(email.value);<br>    if (mail == “”)<br>        return;<br>    var em;<br>    var myReg = /^[_a-z0-9]+@([_a-z0-9]+.)+[a-z0-9]{2,3}$/;<br>    if (separator == null) {<br>        if (myReg.test(email.value) == false) {<br>            alert(alt);<br>            email.focus();<br>            return false;<br>        }<br>    } else {<br>        em = email.value.split(separator);<br>        for (i = 0; i &lt; em.length; i++) {<br>            em[i] = em[i].trim();<br>            if (em[i].length &gt; 0 &amp;&amp; myReg.test(em[i]) == false) {<br>                alert(alt);<br>                email.focus();<br>                return false;<br>            }<br>        }<br>    }<br>    return true;<br>}<br>function validateForm(theForm) {// 若验证通过则返回true<br>    var disableList = new Array();<br>    var field = theForm.elements; // 将表单中的所有元素放入数组<br>    for (var i = 0; i &lt; field.length; i++) {<br>        var vali = theForm.validate;<br>        if (vali != null) {<br>            if (vali.value == “0”) {<br>                var fun = vali.functionName;<br>                if (fun != null) {<br>                    return eval(fun + “()”);<br>                } else {<br>                    return true;<br>                }<br>            }<br>        }<br>        var empty = false;<br>        var value = trim(field[i].value);<br>        if (value.length == 0) {// 是否空值<br>            empty = true;<br>        }<br>        var emptyInfo = field[i].emptyInfo;// 空值验证<br>        if (emptyInfo != null &amp;&amp; empty == true) {<br>            alert(emptyInfo);<br>            field[i].focus();<br>            return false;<br>        }<br>        var lengthInfo = field[i].lengthInfo;// 最大长度验证<br>        if (lengthInfo != null &amp;&amp; getStringLength(value) &gt; field[i].maxLength) {<br>            alert(lengthInfo);<br>            field[i].focus();<br>            return false;<br>        }<br>        var validatorType = field[i].validatorType;<br>        if (validatorType != null) {// 其它javascript<br>            var rs = true;<br>            if (validatorType == “javascript”) {<br>                eval(“rs=” + field[i].functionName + “()”);<br>                if (rs == false) {<br>                    return false;<br>                } else {<br>                    continue;<br>                }<br>            } else if (validatorType == “disable”) {// 提交表单前disable的按钮<br>                disableList.length++;<br>                disableList[disableList.length - 1] = field[i];<br>                continue;<br>            } else if (validatorType == “Date”) {<br>                rs = validateDate(theForm.elements(field[i].fieldName),<br>                        field[i].format, field[i].errorInfo);<br>            } else if (validatorType == “DateGroup”) {<br>                rs = validateDateGroup(theForm.elements(field[i].year), theForm<br>                        .elements(field[i].month), theForm<br>                        .elements(field[i].day), field[i].errorInfo);<br>            } else if (validatorType == “Checkbox”) {<br>                rs = validateCheckbox(theForm.elements(field[i].fieldName),<br>                        field[i].errorInfo);<br>            } else if (validatorType == “Radio”) {<br>                rs = validateRadio(theForm.elements(field[i].fieldName),<br>                        field[i].errorInfo);<br>            } else if (validatorType == “Select”) {<br>                rs = validateSelect(theForm.elements(field[i].fieldName),<br>                        field[i].errorInfo);<br>            } else if (validatorType == “Email”) {<br>                rs = validateEmail(theForm.elements(field[i].fieldName),<br>                        field[i].errorInfo);<br>            } else {<br>                alert(“验证类型不被支持, fieldName: “ + field[i].name);<br>                return false;<br>            }<br>            if (rs == false) {<br>                return false;<br>            }<br>        } else {// 一般验证<br>            if (empty == false) {<br>                var v = field[i].validator; // 获取其validator属性<br>                if (!v)<br>                    continue; // 如果该属性不存在,忽略当前元素<br>                var reg = new RegExp(v);<br>                if (reg.test(field[i].value) == false) {<br>                    alert(field[i].errorInfo);<br>                    field[i].focus();<br>                    return false;<br>                }<br>            }<br>        }<br>    }<br>    for (i = 0; i &lt; disableList.length; i++) {<br>        disableList[i].disabled = true;<br>    }<br>    return true;<br>}<br>```</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式中的特殊字符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含意&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;做为转意，即通常在”\”后面的字符不按原来意义解释，如/b/匹配字符”b”，当b前面加了反斜杆后/\b/，转意为匹配一个单词的边界。 -或- 对正则表达式功能字符的还原，如”&lt;em&gt;“匹配它前面元字符0次或多次，/a&lt;/em&gt;/将匹配a,aa,aaa，加了”\”后，/a*/将只匹配”a*”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;匹配一个输入或一行的开头，/^a/匹配”an A”，而不匹配”An a”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;匹配一个输入或一行的结尾，/a$/匹配”An a”，而不匹配”an A”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;匹配前面元字符0次或多次，/ba*/将匹配b,ba,baa,baaa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;匹配前面元字符1次或多次，/ba*/将匹配ba,baa,baaa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;匹配前面元字符0次或1次，/ba*/将匹配b,ba&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(x)&lt;/td&gt;
&lt;td&gt;匹配x保存x在名为$1…$9的变量中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xly&lt;/td&gt;
&lt;td&gt;匹配x或y(l代表竖线)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n}&lt;/td&gt;
&lt;td&gt;精确匹配n次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,}&lt;/td&gt;
&lt;td&gt;匹配n次以上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{n,m}&lt;/td&gt;
&lt;td&gt;匹配n-m次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[xyz]&lt;/td&gt;
&lt;td&gt;字符集(character set)，匹配这个集合中的任一一个字符(或元字符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[^xyz]&lt;/td&gt;
&lt;td&gt;不匹配这个集合中的任何一个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[\b]&lt;/td&gt;
&lt;td&gt;匹配一个退格符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;匹配一个单词的边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\B&lt;/td&gt;
&lt;td&gt;匹配一个单词的非边界&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\cX&lt;/td&gt;
&lt;td&gt;这儿，X是一个控制符，/\cM/匹配Ctrl-M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;匹配一个字数字符，/\d/ = /[0-9]/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;匹配一个非字数字符，/\D/ = /[^0-9]/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;匹配一个换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;匹配一个回车符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;匹配一个空白字符，包括\n,\r,\f,\t,\v等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;匹配一个非空白字符，等于/[^\n\f\r\t\v]/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;匹配一个制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;匹配一个重直制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;匹配一个可以组成单词的字符(alphanumeric，这是我的意译，含数字)，包括下划线，如[\w]匹配”$5.98”中的5，等于[a-zA-Z0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;匹配一个不可以组成单词的字符，如[\W]匹配”$5.98”中的$，等于[^a-zA-Z0-9]。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
